{"ast":null,"code":"var _jsxFileName = \"D:\\\\DESIS ASCEND Educare Program Edition 4 (2024)\\\\Desis Project\\\\subspot\\\\frontend\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  roomName\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [typedMessage, setTypedMessage] = useState('');\n  useEffect(() => {\n    const chatSocket = new WebSocket(`ws://127.0.0.1:8000/ws/chat/room1/`);\n    chatSocket.onopen = () => {\n      console.log('WebSocket connected for room:', roomName);\n    };\n    chatSocket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      // data should look like { user: 'Sam', message: 'Hello' }\n      if (data.message) {\n        setMessages(prev => [...prev, data]);\n      }\n    };\n    chatSocket.onerror = error => console.error('WebSocket error:', error);\n    chatSocket.onclose = e => console.warn('WebSocket closed:', e);\n    setSocket(chatSocket);\n    return () => chatSocket.close();\n  }, [roomName]);\n  const sendMessage = () => {\n    if (socket && typedMessage.trim()) {\n      socket.send(JSON.stringify({\n        message: typedMessage\n      }));\n      setTypedMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat Room: \", roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: typedMessage,\n      onChange: e => setTypedMessage(e.target.value),\n      onKeyPress: e => {\n        if (e.key === 'Enter') sendMessage();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"5/1XN3aBUbPPaJb6bjL06SCJ7yQ=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChatRoom","roomName","_s","socket","setSocket","messages","setMessages","typedMessage","setTypedMessage","chatSocket","WebSocket","onopen","console","log","onmessage","e","data","JSON","parse","message","prev","onerror","error","onclose","warn","close","sendMessage","trim","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","user","type","value","onChange","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["D:/DESIS ASCEND Educare Program Edition 4 (2024)/Desis Project/subspot/frontend/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ChatRoom = ({ roomName }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [typedMessage, setTypedMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const chatSocket = new WebSocket(`ws://127.0.0.1:8000/ws/chat/room1/`);\r\n\r\n    chatSocket.onopen = () => {\r\n      console.log('WebSocket connected for room:', roomName);\r\n    };\r\n\r\n    chatSocket.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      // data should look like { user: 'Sam', message: 'Hello' }\r\n      if (data.message) {\r\n        setMessages((prev) => [...prev, data]);\r\n      }\r\n    };\r\n\r\n    chatSocket.onerror = (error) => console.error('WebSocket error:', error);\r\n    chatSocket.onclose = (e) => console.warn('WebSocket closed:', e);\r\n\r\n    setSocket(chatSocket);\r\n\r\n    return () => chatSocket.close();\r\n  }, [roomName]);\r\n\r\n  const sendMessage = () => {\r\n    if (socket && typedMessage.trim()) {\r\n      socket.send(JSON.stringify({ message: typedMessage }));\r\n      setTypedMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat Room: {roomName}</h2>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.user}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={typedMessage}\r\n        onChange={(e) => setTypedMessage(e.target.value)}\r\n        onKeyPress={(e) => { if (e.key === 'Enter') sendMessage(); }}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}