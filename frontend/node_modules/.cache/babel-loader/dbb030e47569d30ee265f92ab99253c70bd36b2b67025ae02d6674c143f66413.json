{"ast":null,"code":"import React,{useState,useMemo,useEffect}from'react';import'./Dashboard.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleUser}from'@fortawesome/free-solid-svg-icons';import{faPlus,faTrash,faTimes}from'@fortawesome/free-solid-svg-icons';import{v4 as uuidv4}from'uuid';import{useNavigate}from'react-router-dom';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Dashboard(){const navigate=useNavigate();const[expenseRange,setExpenseRange]=useState('Past year');// State for dropdown\nconst[showSubscriptions,setShowSubscriptions]=useState(true);const[newSubscriptionUserId,setNewSubscriptionUserId]=useState('');// New field\nconst[newSubscriptionServiceName,setNewSubscriptionServiceName]=useState('');// Renamed from newSubscriptionName\nconst[newSubscriptionCost,setNewSubscriptionCost]=useState('');const[newSubscriptionReminder,setNewSubscriptionReminder]=useState('every month');const[newSubscriptionStartDate,setNewSubscriptionStartDate]=useState('');// New field\nconst[newSubscriptionSharable,setNewSubscriptionSharable]=useState('no');// New field\nconst[newSubscriptionAutoRenew,setNewSubscriptionAutoRenew]=useState('yes');// Sample subs data \nconst[subscriptions,setSubscriptions]=useState([{id:1,name:'Spotify Premium',cost:'799',logo:'https://loodibee.com/wp-content/uploads/Spotify-symbol-black.png',logoStyle:{width:'32px',height:'32px'}},{id:2,name:'Netflix',cost:'499',logo:'https://logohistory.net/wp-content/uploads/2023/05/Netflix-Logo-2006-1536x864.png',logoStyle:{width:'32px',height:'32px'}},{id:3,name:'Coursera',cost:'299',logo:'https://d3njjcbhbojbot.cloudfront.net/web/bundles/page/assets/coursera-rebrand-logo.png',logoStyle:{width:'30px',height:'30px'}},{id:4,name:'YouTube Premium',cost:'599',logo:'https://www.freepnglogos.com/uploads/youtube-logo-icon-transparent---32.png',logoStyle:{width:'31px',height:'31px'}},{id:5,name:'iCloud',cost:'299',logo:'https://www.freeiconspng.com/uploads/icloud-logos-revision-wikia-iphone-png-images-4.png',logoStyle:{width:'32px',height:'32px'}}]);const[reminders,setReminders]=useState([{id:uuidv4(),name:'Spotify Premium',cost:'799',date:'Jun 25'},{id:uuidv4(),name:'Netflix',cost:'499',date:'Jul 10'},{id:uuidv4(),name:'Coursera',cost:'299',date:'Aug 01'},{id:uuidv4(),name:'YouTube Premium',cost:'599',date:'Sep 15'},{id:uuidv4(),name:'iCloud',cost:'299',date:'Oct 20'}]);useEffect(()=>{// setReminders(subscriptions.map(sub => ({ id: uuidv4(), name: sub.name, cost: sub.cost, date: 'TBD' })));\n},[subscriptions]);const handleTabClick=tab=>{setShowSubscriptions(tab==='subscriptions');};const handleDeleteReminder=id=>{setReminders(reminders.filter(reminder=>reminder.id!==id));};const handleExpenseRangeChange=event=>{setExpenseRange(event.target.value);};const handleDeleteSubscription=id=>{// Function to delete a subscription\nsetSubscriptions(subscriptions.filter(sub=>sub.id!==id));};const handleAddSubscription=e=>{e.preventDefault();const existingSubscription=subscriptions.find(sub=>sub.name.toLowerCase()===newSubscriptionServiceName.toLowerCase());const newSubscription={id:Date.now(),name:newSubscriptionServiceName,// Still using \"name\" for display consistency\ncost:newSubscriptionCost,logo:existingSubscription?existingSubscription.logo:null,logoStyle:existingSubscription?existingSubscription.logoStyle:{},// Additional fields for backend integration (not displayed on main page)\nuserId:newSubscriptionUserId,reminder:newSubscriptionReminder,startDate:newSubscriptionStartDate,sharable:newSubscriptionSharable,autoRenew:newSubscriptionAutoRenew};setSubscriptions([...subscriptions,newSubscription]);closeAddSubscriptionModal();// Reset all fields\nsetNewSubscriptionUserId('');setNewSubscriptionServiceName('');setNewSubscriptionCost('');setNewSubscriptionReminder('every month');setNewSubscriptionStartDate('');setNewSubscriptionSharable('no');setNewSubscriptionAutoRenew('yes');};const months=useMemo(()=>{const allMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];const currentMonthIndex=new Date().getMonth();switch(expenseRange){case'Last month':return[allMonths[currentMonthIndex]];case'Last 6 months':const lastSixMonths=[];for(let i=5;i>=0;i--){const monthIndex=(currentMonthIndex-i+12)%12;lastSixMonths.push(allMonths[monthIndex]);}return lastSixMonths;default:// 'Past year'\nreturn allMonths;}},[expenseRange]);const barHeights=useMemo(()=>{const defaultHeights=[70,20,35,50,10,75,80,90,25,15,60,40];if(expenseRange==='Last month'){return[Math.floor(Math.random()*100)];}else if(expenseRange==='Last 6 months'){return Array.from({length:6},()=>Math.floor(Math.random()*100));}else{return defaultHeights;}},[expenseRange]);const[isAddSubscriptionModalOpen,setIsAddSubscriptionModalOpen]=useState(false);const openAddSubscriptionModal=()=>{setIsAddSubscriptionModalOpen(true);};const closeAddSubscriptionModal=()=>{setIsAddSubscriptionModalOpen(false);};const handleHomeClick=()=>{navigate('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"dashboard-nav\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"nav-link active\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(Link,{to:\"/market\",className:\"nav-link\",children:\"Market\"}),/*#__PURE__*/_jsx(Link,{to:\"/friends\",className:\"nav-link\",children:\"Friends\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleUser})})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"expense-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Expense\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"expense-range-select\",value:expenseRange,onChange:handleExpenseRangeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Past year\",children:\"Past year\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Last month\",children:\"Last month\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Last 6 months\",children:\"Last 6 months\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-chart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-y-axis\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"3000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"2000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"1000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"0\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bars\",children:barHeights.map((height,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar\",style:{height:`${height}%`}},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-labels\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"span\",{children:month},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-horizontal-lines\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"subscriptions-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${showSubscriptions?'active':''}`,onClick:()=>handleTabClick('subscriptions'),children:\"Subscriptions\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${!showSubscriptions?'active':''}`,onClick:()=>handleTabClick('reminders'),children:\"Reminders\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subscription-list\",children:showSubscriptions?/*#__PURE__*/_jsxs(_Fragment,{children:[subscriptions.map(subscription=>/*#__PURE__*/_jsxs(\"div\",{className:\"subscription-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"subscription-logo\",children:subscription.logo&&/*#__PURE__*/_jsx(\"img\",{src:subscription.logo,alt:`${subscription.name} Logo`,style:subscription.logoStyle})}),/*#__PURE__*/_jsx(\"div\",{className:\"subscription-name\",children:subscription.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"subscription-cost\",children:[\"Rs. \",subscription.cost]}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>handleDeleteSubscription(subscription.id),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash})})]},subscription.id)),/*#__PURE__*/_jsxs(\"button\",{className:\"add-subscription-button\",onClick:openAddSubscriptionModal,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus}),\" Add Subscription\"]})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"reminder-list\",children:reminders.map(reminder=>/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-date\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"reminder-month\",children:reminder.date.split(' ')[0]}),/*#__PURE__*/_jsx(\"span\",{className:\"reminder-day\",children:reminder.date.split(' ')[1]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"reminder-name\",children:reminder.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-cost\",children:[\"Rs. \",reminder.cost]}),/*#__PURE__*/_jsx(\"button\",{className:\"done-button\",onClick:()=>handleDeleteReminder(reminder.id),children:\"Done\"})]},reminder.id))})})})]}),isAddSubscriptionModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"LoginModalOverlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"LoginModal\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"CloseButton\",onClick:closeAddSubscriptionModal,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimes})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add Subscription\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddSubscription,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"User ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter user ID\",value:newSubscriptionUserId,onChange:e=>setNewSubscriptionUserId(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Service Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter service name\",value:newSubscriptionServiceName,onChange:e=>setNewSubscriptionServiceName(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Cost:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter cost\",value:newSubscriptionCost,onChange:e=>setNewSubscriptionCost(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Reminder:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionReminder,onChange:e=>setNewSubscriptionReminder(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"every month\",children:\"Every Month\"}),/*#__PURE__*/_jsx(\"option\",{value:\"every year\",children:\"Every Year\"}),/*#__PURE__*/_jsx(\"option\",{value:\"every 6 months\",children:\"Every 6 Months\"}),/*#__PURE__*/_jsx(\"option\",{value:\"every week\",children:\"Every Week\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:newSubscriptionStartDate,onChange:e=>setNewSubscriptionStartDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sharable:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionSharable,onChange:e=>setNewSubscriptionSharable(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auto Renew:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionAutoRenew,onChange:e=>setNewSubscriptionAutoRenew(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"LoginButton\",children:\"Add Subscription\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-left-ellipse\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-right-ellipse\"})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useMemo","useEffect","FontAwesomeIcon","faCircleUser","faPlus","faTrash","faTimes","v4","uuidv4","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","navigate","expenseRange","setExpenseRange","showSubscriptions","setShowSubscriptions","newSubscriptionUserId","setNewSubscriptionUserId","newSubscriptionServiceName","setNewSubscriptionServiceName","newSubscriptionCost","setNewSubscriptionCost","newSubscriptionReminder","setNewSubscriptionReminder","newSubscriptionStartDate","setNewSubscriptionStartDate","newSubscriptionSharable","setNewSubscriptionSharable","newSubscriptionAutoRenew","setNewSubscriptionAutoRenew","subscriptions","setSubscriptions","id","name","cost","logo","logoStyle","width","height","reminders","setReminders","date","handleTabClick","tab","handleDeleteReminder","filter","reminder","handleExpenseRangeChange","event","target","value","handleDeleteSubscription","sub","handleAddSubscription","e","preventDefault","existingSubscription","find","toLowerCase","newSubscription","Date","now","userId","startDate","sharable","autoRenew","closeAddSubscriptionModal","months","allMonths","currentMonthIndex","getMonth","lastSixMonths","i","monthIndex","push","barHeights","defaultHeights","Math","floor","random","Array","from","length","isAddSubscriptionModalOpen","setIsAddSubscriptionModalOpen","openAddSubscriptionModal","handleHomeClick","className","children","to","icon","onChange","map","index","style","month","onClick","subscription","src","alt","split","onSubmit","type","placeholder"],"sources":["/home/anmol/DEShaw-Project/subspot/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport './Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleUser } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus, faTrash,faTimes } from '@fortawesome/free-solid-svg-icons'; \nimport { v4 as uuidv4 } from 'uuid';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nfunction Dashboard() {\n    const navigate = useNavigate();\n    const [expenseRange, setExpenseRange] = useState('Past year'); // State for dropdown\n    const [showSubscriptions, setShowSubscriptions] = useState(true);\n    const [newSubscriptionUserId, setNewSubscriptionUserId] = useState(''); // New field\n    const [newSubscriptionServiceName, setNewSubscriptionServiceName] = useState(''); // Renamed from newSubscriptionName\n    const [newSubscriptionCost, setNewSubscriptionCost] = useState('');\n    const [newSubscriptionReminder, setNewSubscriptionReminder] = useState('every month');\n    const [newSubscriptionStartDate, setNewSubscriptionStartDate] = useState(''); // New field\n    const [newSubscriptionSharable, setNewSubscriptionSharable] = useState('no'); // New field\n    const [newSubscriptionAutoRenew, setNewSubscriptionAutoRenew] = useState('yes');\n\n    // Sample subs data \n    const [subscriptions, setSubscriptions] = useState([\n        { id: 1, name: 'Spotify Premium', cost: '799', logo: 'https://loodibee.com/wp-content/uploads/Spotify-symbol-black.png', logoStyle: { width: '32px', height: '32px' } },\n        { id: 2, name: 'Netflix', cost: '499', logo: 'https://logohistory.net/wp-content/uploads/2023/05/Netflix-Logo-2006-1536x864.png', logoStyle: { width: '32px', height: '32px' } },\n        { id: 3, name: 'Coursera', cost: '299', logo: 'https://d3njjcbhbojbot.cloudfront.net/web/bundles/page/assets/coursera-rebrand-logo.png', logoStyle: { width: '30px', height: '30px' } },\n        { id: 4, name: 'YouTube Premium', cost: '599', logo: 'https://www.freepnglogos.com/uploads/youtube-logo-icon-transparent---32.png', logoStyle: { width: '31px', height: '31px' } },\n        { id: 5, name: 'iCloud', cost: '299', logo: 'https://www.freeiconspng.com/uploads/icloud-logos-revision-wikia-iphone-png-images-4.png', logoStyle: { width: '32px', height: '32px' } },\n    ]);\n\n    const [reminders, setReminders] = useState([\n        { id: uuidv4(), name: 'Spotify Premium', cost: '799', date: 'Jun 25' },\n        { id: uuidv4(), name: 'Netflix', cost: '499', date: 'Jul 10' },\n        { id: uuidv4(), name: 'Coursera', cost: '299', date: 'Aug 01' },\n        { id: uuidv4(), name: 'YouTube Premium', cost: '599', date: 'Sep 15' },\n        { id: uuidv4(), name: 'iCloud', cost: '299', date: 'Oct 20' },\n    ]);\n\n    useEffect(() => {\n        // setReminders(subscriptions.map(sub => ({ id: uuidv4(), name: sub.name, cost: sub.cost, date: 'TBD' })));\n    }, [subscriptions]);\n\n    const handleTabClick = (tab) => {\n        setShowSubscriptions(tab === 'subscriptions');\n    };\n\n    const handleDeleteReminder = (id) => {\n        setReminders(reminders.filter(reminder => reminder.id !== id));\n    };\n\n    const handleExpenseRangeChange = (event) => {\n        setExpenseRange(event.target.value);\n    };\n    const handleDeleteSubscription = (id) => {\n        // Function to delete a subscription\n        setSubscriptions(subscriptions.filter((sub) => sub.id !== id));\n    };\n    const handleAddSubscription = (e) => {\n        e.preventDefault();\n    \n        const existingSubscription = subscriptions.find(sub => sub.name.toLowerCase() === newSubscriptionServiceName.toLowerCase());\n    \n        const newSubscription = {\n          id: Date.now(),\n          name: newSubscriptionServiceName, // Still using \"name\" for display consistency\n          cost: newSubscriptionCost,\n          logo: existingSubscription ? existingSubscription.logo : null,\n          logoStyle: existingSubscription ? existingSubscription.logoStyle : {},\n          // Additional fields for backend integration (not displayed on main page)\n          userId: newSubscriptionUserId,\n          reminder: newSubscriptionReminder,\n          startDate: newSubscriptionStartDate,\n          sharable: newSubscriptionSharable,\n          autoRenew: newSubscriptionAutoRenew,\n        };\n    \n        setSubscriptions([...subscriptions, newSubscription]);\n        closeAddSubscriptionModal();\n    \n        // Reset all fields\n        setNewSubscriptionUserId('');\n        setNewSubscriptionServiceName('');\n        setNewSubscriptionCost('');\n        setNewSubscriptionReminder('every month');\n        setNewSubscriptionStartDate('');\n        setNewSubscriptionSharable('no');\n        setNewSubscriptionAutoRenew('yes');\n    };\n\n    const months = useMemo(() => {\n        const allMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const currentMonthIndex = new Date().getMonth();\n\n        switch (expenseRange) {\n            case 'Last month':\n                return [allMonths[currentMonthIndex]];\n            case 'Last 6 months':\n                const lastSixMonths = [];\n                for (let i = 5; i >= 0; i--) {\n                    const monthIndex = (currentMonthIndex - i + 12) % 12; \n                    lastSixMonths.push(allMonths[monthIndex]);\n                }\n                return lastSixMonths;\n            default: // 'Past year'\n                return allMonths;\n        }\n    }, [expenseRange]);\n\n    const barHeights = useMemo(() => {\n        const defaultHeights = [70, 20, 35, 50, 10, 75, 80, 90, 25, 15, 60, 40];\n\n        if (expenseRange === 'Last month') {\n            return [Math.floor(Math.random() * 100)]; \n        } else if (expenseRange === 'Last 6 months') {\n            return Array.from({ length: 6 }, () => Math.floor(Math.random() * 100)); \n        } else {\n            return defaultHeights;\n        }\n    }, [expenseRange]);\n\n    const [isAddSubscriptionModalOpen, setIsAddSubscriptionModalOpen] = useState(false);\n\n    const openAddSubscriptionModal = () => {\n        setIsAddSubscriptionModalOpen(true);\n    };\n\n    const closeAddSubscriptionModal = () => {\n        setIsAddSubscriptionModalOpen(false);\n    };\n\n    const handleHomeClick = () => {\n        navigate('/'); \n      };\n    return (\n        <div className=\"dashboard-container\">\n            \n            <header className=\"dashboard-header\">\n                <nav className=\"dashboard-nav\">\n                    <Link to=\"/dashboard\" className=\"nav-link active\">Dashboard</Link>\n                    <Link to=\"/market\" className=\"nav-link\">Market</Link>\n                    <Link to=\"/friends\" className=\"nav-link\">Friends</Link>\n                    <div className=\"user-icon\">\n                        <FontAwesomeIcon icon={faCircleUser} />\n                    </div>\n                </nav>\n            </header>\n\n            <main className=\"dashboard-content\">\n                <section className=\"expense-section\">\n                    <div className=\"expense-header\">\n                        <h2 className=\"section-title\">Expense</h2>\n                        <select\n                            className=\"expense-range-select\"\n                            value={expenseRange}\n                            onChange={handleExpenseRangeChange}\n                        >\n                            <option value=\"Past year\">Past year</option>\n                            <option value=\"Last month\">Last month</option>\n                            <option value=\"Last 6 months\">Last 6 months</option>\n                        </select>\n                    </div>\n\n                    <div className=\"expense-chart\">\n                        <div className=\"chart-y-axis\">\n                            <span>3000</span>\n                            <span>2000</span>\n                            <span>1000</span>\n                            <span>0</span>\n                        </div>\n\n                        <div className=\"chart-bars\">\n                            {barHeights.map((height, index) => (\n                                <div\n                                    key={index}\n                                    className=\"chart-bar\"\n                                    style={{ height: `${height}%` }}\n                                ></div>\n                            ))}\n                        </div>\n\n                        <div className=\"chart-labels\">\n                            {months.map((month, index) => (\n                                <span key={index}>{month}</span>\n                            ))}\n                        </div>\n\n                        <div className=\"chart-horizontal-lines\">\n                            <div className=\"horizontal-line\"></div>\n                            <div className=\"horizontal-line\"></div>\n                            <div className=\"horizontal-line\"></div>\n                            <div className=\"horizontal-line\"></div>\n                        </div>\n\n                        \n                    </div>\n                </section>\n\n                <section className=\"subscriptions-section\">\n                    <div className=\"section-tabs\">\n                        <button\n                            className={`tab-button ${showSubscriptions ? 'active' : ''}`}\n                            onClick={() => handleTabClick('subscriptions')}\n                        >\n                            Subscriptions\n                        </button>\n                        <button\n                            className={`tab-button ${!showSubscriptions ? 'active' : ''}`}\n                            onClick={() => handleTabClick('reminders')}\n                        >\n                            Reminders\n                        </button>\n                    </div>\n\n                    <div className=\"subscription-list\">\n                        {showSubscriptions ? (\n                            <>\n                                {subscriptions.map((subscription) => (\n                                    <div className=\"subscription-item\" key={subscription.id}>\n                                        <div className=\"subscription-logo\">\n                                            {subscription.logo && (\n                                                <img src={subscription.logo} alt={`${subscription.name} Logo`} style={subscription.logoStyle} />\n                                            )}\n                                        </div>\n                                        <div className=\"subscription-name\">{subscription.name}</div>\n                                        <div className=\"subscription-cost\">Rs. {subscription.cost}</div>\n                                        <button\n                                            className=\"delete-button\"\n                                            onClick={() => handleDeleteSubscription(subscription.id)}\n                                        >\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </button>\n                                    </div>\n                                ))}\n                                <button className=\"add-subscription-button\" onClick={openAddSubscriptionModal}>\n                                    <FontAwesomeIcon icon={faPlus} /> Add Subscription\n                                </button>\n                            </>\n                        ) : (\n                            <>\n                            <div className=\"reminder-list\">\n                                {reminders.map((reminder) => (\n                                    <div className=\"reminder-item\" key={reminder.id}>\n                                        <div className=\"reminder-date\">\n                                        <span className=\"reminder-month\">{reminder.date.split(' ')[0]}</span>        \n                                        <span className=\"reminder-day\">{reminder.date.split(' ')[1]}</span>\n                                        </div>\n                                        <div className=\"reminder-name\">{reminder.name}</div>\n                                        <div className=\"reminder-cost\">Rs. {reminder.cost}</div>\n                                        <button\n                                            className=\"done-button\"\n                                            onClick={() => handleDeleteReminder(reminder.id)}\n                                        >\n                                            Done\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                            </>\n                        )}\n                    </div>\n                </section>      \n                {/* Add Subscription Modal */}\n                {isAddSubscriptionModalOpen && (\n                <div className=\"LoginModalOverlay\">\n                    <div className=\"LoginModal\">\n                    <button className=\"CloseButton\" onClick={closeAddSubscriptionModal}>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </button>\n                    <h2>Add Subscription</h2>\n                    <form onSubmit={handleAddSubscription}>\n                        <div className=\"InputGroup\">\n                        <label>User ID:</label>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter user ID\"\n                            value={newSubscriptionUserId}\n                            onChange={(e) => setNewSubscriptionUserId(e.target.value)}\n                        />\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Service Name:</label>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter service name\"\n                            value={newSubscriptionServiceName}\n                            onChange={(e) => setNewSubscriptionServiceName(e.target.value)}\n                        />\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Cost:</label>\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter cost\"\n                            value={newSubscriptionCost}\n                            onChange={(e) => setNewSubscriptionCost(e.target.value)}\n                        />\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Reminder:</label>\n                        <select\n                            value={newSubscriptionReminder}\n                            onChange={(e) => setNewSubscriptionReminder(e.target.value)}\n                        >\n                            <option value=\"every month\">Every Month</option>\n                            <option value=\"every year\">Every Year</option>\n                            <option value=\"every 6 months\">Every 6 Months</option>\n                            <option value=\"every week\">Every Week</option>\n                        </select>\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Start Date:</label>\n                        <input\n                            type=\"date\"\n                            value={newSubscriptionStartDate}\n                            onChange={(e) => setNewSubscriptionStartDate(e.target.value)}\n                        />\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Sharable:</label>\n                        <select\n                            value={newSubscriptionSharable}\n                            onChange={(e) => setNewSubscriptionSharable(e.target.value)}\n                        >\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </select>\n                        </div>\n                        <div className=\"InputGroup\">\n                        <label>Auto Renew:</label>\n                        <select\n                            value={newSubscriptionAutoRenew}\n                            onChange={(e) => setNewSubscriptionAutoRenew(e.target.value)}\n                        >\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </select>\n                        </div>\n                        <button className=\"LoginButton\">Add Subscription</button>\n                    </form>\n                    </div>\n                </div>\n                )}\n                <div className=\"bottom-left-ellipse\"></div>\n                <div className=\"bottom-right-ellipse\"></div>             \n            </main>\n        </div>\n    );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}