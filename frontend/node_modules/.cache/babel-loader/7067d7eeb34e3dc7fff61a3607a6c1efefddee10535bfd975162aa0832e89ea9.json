{"ast":null,"code":"var _jsxFileName = \"D:\\\\DESIS ASCEND Educare Program Edition 4 (2024)\\\\Desis Project\\\\subspot\\\\frontend\\\\src\\\\components\\\\ChatListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faEllipsisV, faDownload, faPaperPlane, faPaperclip } from '@fortawesome/free-solid-svg-icons';\nimport './ChatListPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialChats = [{\n  id: 1,\n  name: 'Friend 1'\n}, {\n  id: 2,\n  name: 'Friend 2'\n}, {\n  id: 3,\n  name: 'Seller 1'\n}];\nconst ChatListPage = () => {\n  _s();\n  var _chatList$find, _messages$selectedCha;\n  // Store chat list in state so we can delete a chat\n  const [chatList, setChatList] = useState(initialChats);\n\n  // Track which chat is selected\n  const [selectedChat, setSelectedChat] = useState(null);\n\n  // Example messages (with timestamps, stored by chat ID)\n  const [messages, setMessages] = useState({\n    1: [{\n      sender: 'theirs',\n      text: 'Hello!',\n      time: '10:00 AM',\n      type: 'text'\n    }, {\n      sender: 'mine',\n      text: 'Hi there!',\n      time: '10:01 AM',\n      type: 'text'\n    }],\n    2: [],\n    3: []\n  });\n\n  // Track what the user is typing\n  const [typedMessage, setTypedMessage] = useState('');\n\n  // For file uploads (images, docs, pdf, etc.)\n  const fileInputRef = useRef(null);\n\n  // For image modal (zoomed image)\n  const [modalImage, setModalImage] = useState(null);\n\n  // For the 3-dot menu\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Generate a timestamp (e.g., 10:02 AM)\n  const getTimeStamp = () => {\n    return new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Handle selecting a chat\n  const handleSelectChat = chatId => {\n    setSelectedChat(chatId);\n    setTypedMessage('');\n    setMenuOpen(false); // close menu if switching chats\n  };\n\n  // Handle sending a text message\n  const handleSend = () => {\n    if (!typedMessage.trim() || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: [...(prev[selectedChat] || []), {\n        sender: 'mine',\n        text: typedMessage,\n        time: timeStamp,\n        type: 'text'\n      }]\n    }));\n    setTypedMessage('');\n  };\n\n  // Handle clicking the \"Upload\" icon\n  const handleUploadClick = () => {\n    if (!selectedChat) return;\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle when a file is selected\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n\n    // We want to check if the file is an image (to show preview) or some other doc\n    const fileName = file.name;\n    const fileType = file.type.toLowerCase();\n\n    // We'll read everything as a data URL for easy preview or download\n    const reader = new FileReader();\n    reader.onload = () => {\n      // If it's an image (png, jpg, gif, etc.)\n      if (fileType.startsWith('image/')) {\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: [...(prev[selectedChat] || []), {\n            sender: 'mine',\n            src: reader.result,\n            // base64 data URL\n            time: timeStamp,\n            type: 'image'\n          }]\n        }));\n      } else {\n        // Otherwise, treat it as a file\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: [...(prev[selectedChat] || []), {\n            sender: 'mine',\n            src: reader.result,\n            // base64 data URL\n            time: timeStamp,\n            type: 'file',\n            fileName: fileName // store the file name\n          }]\n        }));\n      }\n    };\n    reader.readAsDataURL(file);\n\n    // Reset file input so the same file can be re-selected if desired\n    e.target.value = '';\n  };\n\n  // Open image modal with a larger view\n  const openImageModal = src => {\n    setModalImage(src);\n  };\n\n  // Close image modal\n  const closeImageModal = () => {\n    setModalImage(null);\n  };\n\n  // Clear all messages in the selected chat\n  const handleClearChat = () => {\n    if (!selectedChat) return;\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: []\n    }));\n    setMenuOpen(false);\n  };\n\n  // Delete the selected chat entirely\n  const handleDeleteChat = () => {\n    if (!selectedChat) return;\n    // Remove from chatList\n    setChatList(prevList => prevList.filter(chat => chat.id !== selectedChat));\n    // Remove messages\n    setMessages(prev => {\n      const newMessages = {\n        ...prev\n      };\n      delete newMessages[selectedChat];\n      return newMessages;\n    });\n    // Deselect chat\n    setSelectedChat(null);\n    setMenuOpen(false);\n  };\n\n  // Toggle the 3-dot menu\n  const toggleMenu = () => {\n    setMenuOpen(prev => !prev);\n  };\n\n  // Close the menu if clicked outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chats-left-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"back-link arrow-only\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chats-title\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-list\",\n          children: chatList.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleSelectChat(chat.id),\n            children: chat.name\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-right-panel\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"chats-right-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-contact-name\",\n              children: (_chatList$find = chatList.find(chat => chat.id === selectedChat)) === null || _chatList$find === void 0 ? void 0 : _chatList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-actions\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEllipsisV,\n                className: \"ellipsis-icon\",\n                onClick: toggleMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-menu-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleClearChat,\n                  children: \"Clear Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleDeleteChat,\n                  children: \"Delete Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: (_messages$selectedCha = messages[selectedChat]) === null || _messages$selectedCha === void 0 ? void 0 : _messages$selectedCha.map((msg, index) => {\n              switch (msg.type) {\n                case 'text':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-text\",\n                      children: msg.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this);\n                case 'image':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: msg.src,\n                      alt: \"sent\",\n                      className: \"message-image\",\n                      onClick: () => openImageModal(msg.src)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this);\n                case 'file':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: msg.src,\n                      download: msg.fileName,\n                      className: \"file-link\",\n                      title: \"Download File\",\n                      children: msg.fileName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this);\n                default:\n                  return null;\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type a message...\",\n              value: typedMessage,\n              onChange: e => setTypedMessage(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') handleSend();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane,\n              className: \"send-icon\",\n              onClick: handleSend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              },\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              className: \"upload-icon\",\n              onClick: handleUploadClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        /* Centered placeholder message */\n        _jsxDEV(\"div\", {\n          className: \"chat-placeholder\",\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal\",\n      onClick: closeImageModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-modal-icon\",\n          onClick: closeImageModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          alt: \"Enlarged\",\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: modalImage,\n          download: \"image.png\",\n          className: \"download-link\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatListPage, \"F3hNiistCk8X8d7NJ9XKD+9vVh4=\");\n_c = ChatListPage;\nexport default ChatListPage;\nvar _c;\n$RefreshReg$(_c, \"ChatListPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","FontAwesomeIcon","faArrowLeft","faEllipsisV","faDownload","faPaperPlane","faPaperclip","jsxDEV","_jsxDEV","initialChats","id","name","ChatListPage","_s","_chatList$find","_messages$selectedCha","chatList","setChatList","selectedChat","setSelectedChat","messages","setMessages","sender","text","time","type","typedMessage","setTypedMessage","fileInputRef","modalImage","setModalImage","menuOpen","setMenuOpen","menuRef","getTimeStamp","Date","toLocaleTimeString","hour","minute","handleSelectChat","chatId","handleSend","trim","timeStamp","prev","handleUploadClick","current","click","handleFileChange","e","file","target","files","fileName","fileType","toLowerCase","reader","FileReader","onload","startsWith","src","result","readAsDataURL","value","openImageModal","closeImageModal","handleClearChat","handleDeleteChat","prevList","filter","chat","newMessages","toggleMenu","handleClickOutside","event","contains","document","addEventListener","removeEventListener","className","children","to","icon","_jsxFileName","lineNumber","columnNumber","map","onClick","find","ref","msg","index","alt","href","download","title","placeholder","onChange","onKeyDown","key","accept","style","display","stopPropagation","_c","$RefreshReg$"],"sources":["D:/DESIS ASCEND Educare Program Edition 4 (2024)/Desis Project/subspot/frontend/src/components/ChatListPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowLeft,\r\n  faEllipsisV,\r\n  faDownload,\r\n  faPaperPlane,\r\n  faPaperclip,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './ChatListPage.css';\r\n\r\nconst initialChats = [\r\n  { id: 1, name: 'Friend 1' },\r\n  { id: 2, name: 'Friend 2' },\r\n  { id: 3, name: 'Seller 1' },\r\n];\r\n\r\nconst ChatListPage = () => {\r\n  // Store chat list in state so we can delete a chat\r\n  const [chatList, setChatList] = useState(initialChats);\r\n\r\n  // Track which chat is selected\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n\r\n  // Example messages (with timestamps, stored by chat ID)\r\n  const [messages, setMessages] = useState({\r\n    1: [\r\n      { sender: 'theirs', text: 'Hello!', time: '10:00 AM', type: 'text' },\r\n      { sender: 'mine', text: 'Hi there!', time: '10:01 AM', type: 'text' },\r\n    ],\r\n    2: [],\r\n    3: [],\r\n  });\r\n\r\n  // Track what the user is typing\r\n  const [typedMessage, setTypedMessage] = useState('');\r\n\r\n  // For file uploads (images, docs, pdf, etc.)\r\n  const fileInputRef = useRef(null);\r\n\r\n  // For image modal (zoomed image)\r\n  const [modalImage, setModalImage] = useState(null);\r\n\r\n  // For the 3-dot menu\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n  // Generate a timestamp (e.g., 10:02 AM)\r\n  const getTimeStamp = () => {\r\n    return new Date().toLocaleTimeString([], {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  // Handle selecting a chat\r\n  const handleSelectChat = (chatId) => {\r\n    setSelectedChat(chatId);\r\n    setTypedMessage('');\r\n    setMenuOpen(false); // close menu if switching chats\r\n  };\r\n\r\n  // Handle sending a text message\r\n  const handleSend = () => {\r\n    if (!typedMessage.trim() || !selectedChat) return;\r\n    const timeStamp = getTimeStamp();\r\n\r\n    setMessages((prev) => ({\r\n      ...prev,\r\n      [selectedChat]: [\r\n        ...(prev[selectedChat] || []),\r\n        {\r\n          sender: 'mine',\r\n          text: typedMessage,\r\n          time: timeStamp,\r\n          type: 'text',\r\n        },\r\n      ],\r\n    }));\r\n\r\n    setTypedMessage('');\r\n  };\r\n\r\n  // Handle clicking the \"Upload\" icon\r\n  const handleUploadClick = () => {\r\n    if (!selectedChat) return;\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // Handle when a file is selected\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file || !selectedChat) return;\r\n\r\n    const timeStamp = getTimeStamp();\r\n\r\n    // We want to check if the file is an image (to show preview) or some other doc\r\n    const fileName = file.name;\r\n    const fileType = file.type.toLowerCase();\r\n\r\n    // We'll read everything as a data URL for easy preview or download\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      // If it's an image (png, jpg, gif, etc.)\r\n      if (fileType.startsWith('image/')) {\r\n        setMessages((prev) => ({\r\n          ...prev,\r\n          [selectedChat]: [\r\n            ...(prev[selectedChat] || []),\r\n            {\r\n              sender: 'mine',\r\n              src: reader.result, // base64 data URL\r\n              time: timeStamp,\r\n              type: 'image',\r\n            },\r\n          ],\r\n        }));\r\n      } else {\r\n        // Otherwise, treat it as a file\r\n        setMessages((prev) => ({\r\n          ...prev,\r\n          [selectedChat]: [\r\n            ...(prev[selectedChat] || []),\r\n            {\r\n              sender: 'mine',\r\n              src: reader.result,  // base64 data URL\r\n              time: timeStamp,\r\n              type: 'file',\r\n              fileName: fileName,  // store the file name\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n\r\n    // Reset file input so the same file can be re-selected if desired\r\n    e.target.value = '';\r\n  };\r\n\r\n  // Open image modal with a larger view\r\n  const openImageModal = (src) => {\r\n    setModalImage(src);\r\n  };\r\n\r\n  // Close image modal\r\n  const closeImageModal = () => {\r\n    setModalImage(null);\r\n  };\r\n\r\n  // Clear all messages in the selected chat\r\n  const handleClearChat = () => {\r\n    if (!selectedChat) return;\r\n    setMessages((prev) => ({\r\n      ...prev,\r\n      [selectedChat]: [],\r\n    }));\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Delete the selected chat entirely\r\n  const handleDeleteChat = () => {\r\n    if (!selectedChat) return;\r\n    // Remove from chatList\r\n    setChatList((prevList) => prevList.filter((chat) => chat.id !== selectedChat));\r\n    // Remove messages\r\n    setMessages((prev) => {\r\n      const newMessages = { ...prev };\r\n      delete newMessages[selectedChat];\r\n      return newMessages;\r\n    });\r\n    // Deselect chat\r\n    setSelectedChat(null);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Toggle the 3-dot menu\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prev) => !prev);\r\n  };\r\n\r\n  // Close the menu if clicked outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chats-container\">\r\n      <div className=\"chats-wrapper\">\r\n        {/* Left Panel: Chat List */}\r\n        <div className=\"chats-left-panel\">\r\n          <header className=\"chats-left-header\">\r\n            {/* Arrow-only back button in the top-left corner */}\r\n            <Link to=\"/dashboard\" className=\"back-link arrow-only\">\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </Link>\r\n            {/* Centered title */}\r\n            <h2 className=\"chats-title\">Chat</h2>\r\n          </header>\r\n\r\n          <ul className=\"chat-list\">\r\n            {chatList.map((chat) => (\r\n              <li\r\n                key={chat.id}\r\n                className={`chat-item ${selectedChat === chat.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectChat(chat.id)}\r\n              >\r\n                {chat.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Right Panel: Chat Messages */}\r\n        <div className=\"chats-right-panel\">\r\n          {selectedChat ? (\r\n            <div className=\"chat-content\">\r\n              <header className=\"chats-right-header\">\r\n                <span className=\"chat-contact-name\">\r\n                  {chatList.find((chat) => chat.id === selectedChat)?.name}\r\n                </span>\r\n                <div className=\"chat-header-actions\" ref={menuRef}>\r\n                  <FontAwesomeIcon\r\n                    icon={faEllipsisV}\r\n                    className=\"ellipsis-icon\"\r\n                    onClick={toggleMenu}\r\n                  />\r\n                  {menuOpen && (\r\n                    <div className=\"chat-menu-dropdown\">\r\n                      <div className=\"dropdown-item\" onClick={handleClearChat}>\r\n                        Clear Chat\r\n                      </div>\r\n                      <div className=\"dropdown-item\" onClick={handleDeleteChat}>\r\n                        Delete Chat\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </header>\r\n              <div className=\"chat-messages\">\r\n                {/* Render messages for the selected chat */}\r\n                {messages[selectedChat]?.map((msg, index) => {\r\n                  switch (msg.type) {\r\n                    case 'text':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          <div className=\"message-text\">{msg.text}</div>\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    case 'image':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          <img\r\n                            src={msg.src}\r\n                            alt=\"sent\"\r\n                            className=\"message-image\"\r\n                            onClick={() => openImageModal(msg.src)}\r\n                          />\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    case 'file':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          {/* Download link with file name */}\r\n                          <a\r\n                            href={msg.src}\r\n                            download={msg.fileName}\r\n                            className=\"file-link\"\r\n                            title=\"Download File\"\r\n                          >\r\n                            {msg.fileName}\r\n                          </a>\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    default:\r\n                      return null;\r\n                  }\r\n                })}\r\n              </div>\r\n              <div className=\"chats-input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type a message...\"\r\n                  value={typedMessage}\r\n                  onChange={(e) => setTypedMessage(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') handleSend();\r\n                  }}\r\n                />\r\n                {/* Send icon instead of button text */}\r\n                <FontAwesomeIcon\r\n                  icon={faPaperPlane}\r\n                  className=\"send-icon\"\r\n                  onClick={handleSend}\r\n                />\r\n                {/* Hidden file input for any upload */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: 'none' }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                {/* Paperclip icon for upload */}\r\n                <FontAwesomeIcon\r\n                  icon={faPaperclip}\r\n                  className=\"upload-icon\"\r\n                  onClick={handleUploadClick}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            /* Centered placeholder message */\r\n            <div className=\"chat-placeholder\">Start Messaging</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Modal for enlarged preview */}\r\n      {modalImage && (\r\n        <div className=\"image-modal\" onClick={closeImageModal}>\r\n          <div className=\"image-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            {/* Close icon in the top-right corner */}\r\n            <span className=\"close-modal-icon\" onClick={closeImageModal}>\r\n              &times;\r\n            </span>\r\n            <img src={modalImage} alt=\"Enlarged\" className=\"modal-image\" />\r\n            {/* Download icon link (force download attribute) */}\r\n            <a href={modalImage} download=\"image.png\" className=\"download-link\">\r\n              <FontAwesomeIcon icon={faDownload} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}