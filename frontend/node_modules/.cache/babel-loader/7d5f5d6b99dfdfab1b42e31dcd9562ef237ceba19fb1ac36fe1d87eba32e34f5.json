{"ast":null,"code":"import React,{useState,useMemo,useEffect}from'react';import'./Dashboard.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleUser,faPlus,faTrash,faTimes}from'@fortawesome/free-solid-svg-icons';import{useNavigate,Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Dashboard(){const navigate=useNavigate();const[expenseRange,setExpenseRange]=useState('Past year');const[showSubscriptions,setShowSubscriptions]=useState(true);const[newSubscriptionName,setNewSubscriptionName]=useState('');const[newSubscriptionCost,setNewSubscriptionCost]=useState('');const[newSubscriptionReminder,setNewSubscriptionReminder]=useState('monthly');const[newSubscriptionSharable,setNewSubscriptionSharable]=useState(true);const[newSubscriptionAutoRenew,setNewSubscriptionAutoRenew]=useState(false);const[subscriptions,setSubscriptions]=useState([]);const[reminders,setReminders]=useState([]);const[expenseData,setExpenseData]=useState({months:[],barHeights:[]});const[isDropdownOpen,setIsDropdownOpen]=useState(false);const[userInfo,setUserInfo]=useState({username:'',email:''});const API_BASE_URL='http://localhost:8000/';useEffect(()=>{fetch(`${API_BASE_URL}auth/user/`,{credentials:'include'}).then(res=>{if(res.status===401){navigate('/');// Redirect to landing (not authenticated)\nreturn;}return res.json();}).then(data=>{if(data){setUserInfo({username:data.username,email:data.email});}}).catch(err=>console.error('Error fetching user info:',err));fetch(`${API_BASE_URL}subscriptions/`,{credentials:'include'}).then(res=>res.json()).then(data=>{console.log('Subscriptions:',data);setSubscriptions(data);}).catch(err=>console.error('Error fetching subscriptions:',err));fetch(`${API_BASE_URL}reminders/`,{credentials:'include'}).then(res=>res.json()).then(data=>{console.log('Reminders:',data);setReminders(data);}).catch(err=>console.error('Error fetching reminders:',err));fetch(`${API_BASE_URL}expenses/?range=${expenseRange.toLowerCase().replace(' ','_')}`,{credentials:'include'}).then(res=>res.json()).then(data=>{console.log('Expenses:',data);setExpenseData({months:data.months||[],barHeights:data.barHeights||[]});}).catch(err=>console.error('Error fetching expenses:',err));},[expenseRange,navigate]);const handleTabClick=tab=>setShowSubscriptions(tab==='subscriptions');const handleDeleteReminder=id=>{fetch(`${API_BASE_URL}subscriptions/${id}/`,{method:'DELETE',credentials:'include'}).then(()=>setReminders(reminders.filter(reminder=>reminder.id!==id))).catch(err=>console.error('Error deleting reminder:',err));};const handleExpenseRangeChange=event=>setExpenseRange(event.target.value);const handleDeleteSubscription=id=>{fetch(`${API_BASE_URL}subscriptions/${id}/`,{method:'DELETE',credentials:'include'}).then(()=>{setSubscriptions(subscriptions.filter(sub=>sub.id!==id));setReminders(reminders.filter(reminder=>reminder.id!==id));}).catch(err=>console.error('Error deleting subscription:',err));};const handleAddSubscription=e=>{e.preventDefault();const newSubscription={name:newSubscriptionName,reminder:newSubscriptionReminder,cost:newSubscriptionCost,is_shareable:newSubscriptionSharable,is_autorenew:newSubscriptionAutoRenew};fetch(`${API_BASE_URL}subscriptions/`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newSubscription),credentials:'include'}).then(res=>res.json()).then(data=>{setSubscriptions([...subscriptions,data]);if(!data.is_autorenew){setReminders([...reminders,{id:data.id,name:data.name,cost:data.cost,end_date:data.renew_date}]);}closeAddSubscriptionModal();setNewSubscriptionName('');setNewSubscriptionCost('');setNewSubscriptionReminder('monthly');setNewSubscriptionSharable(true);setNewSubscriptionAutoRenew(false);}).catch(err=>console.error('Error adding subscription:',err));};const handleLogout=()=>{fetch(`${API_BASE_URL}auth/logout/`,{method:'POST',credentials:'include'}).then(()=>{setIsDropdownOpen(false);navigate('/');}).catch(err=>console.error('Logout error:',err));};const toggleDropdown=()=>setIsDropdownOpen(!isDropdownOpen);const filteredExpenseData=useMemo(()=>{const allMonths=expenseData.months||[];const allBarHeights=expenseData.barHeights||[];const currentMonthIndex=new Date().getMonth();const monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];const orderedMonths=[];const orderedHeights=[];for(let i=0;i<12;i++){const monthIndex=(currentMonthIndex-11+i+12)%12;orderedMonths.push(monthNames[monthIndex]);const backendIndex=allMonths.indexOf(monthNames[monthIndex]);orderedHeights.push(backendIndex!==-1?allBarHeights[backendIndex]:0);}let filteredMonths=[];let filteredHeights=[];if(expenseRange==='Last month'){filteredMonths=[orderedMonths[11]];filteredHeights=[orderedHeights[11]];}else if(expenseRange==='Last 6 months'){filteredMonths=orderedMonths.slice(6,12);filteredHeights=orderedHeights.slice(6,12);}else{filteredMonths=orderedMonths;filteredHeights=orderedHeights;}console.log('Filtered Expense Data:',{months:filteredMonths,barHeights:filteredHeights});return{months:filteredMonths,barHeights:filteredHeights};},[expenseData,expenseRange]);const months=filteredExpenseData.months;const barHeights=filteredExpenseData.barHeights;const[isAddSubscriptionModalOpen,setIsAddSubscriptionModalOpen]=useState(false);const openAddSubscriptionModal=()=>setIsAddSubscriptionModalOpen(true);const closeAddSubscriptionModal=()=>setIsAddSubscriptionModalOpen(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"dashboard-nav\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"nav-link active\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(Link,{to:\"/market\",className:\"nav-link\",children:\"Market\"}),/*#__PURE__*/_jsx(Link,{to:\"/friends\",className:\"nav-link\",children:\"Friends\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-icon\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleUser,onClick:toggleDropdown}),isDropdownOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-dropdown\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Username: \",/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:userInfo.username})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:userInfo.email})]}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:handleLogout,children:\"Logout\"})]})]})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"expense-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Expense\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"expense-range-select\",value:expenseRange,onChange:handleExpenseRangeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Past year\",children:\"Past year\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Last month\",children:\"Last month\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Last 6 months\",children:\"Last 6 months\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-chart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-y-axis\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Rs.3000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Rs.2000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Rs.1000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Rs.0\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bars\",children:barHeights.map((height,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar\",style:{height:`${height/3000*100}%`}},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-labels\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"span\",{children:month.slice(0,3)},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-horizontal-lines\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-line\"})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"subscriptions-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${showSubscriptions?'active':''}`,onClick:()=>handleTabClick('subscriptions'),children:\"Subscriptions\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${!showSubscriptions?'active':''}`,onClick:()=>handleTabClick('reminders'),children:\"Reminders\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subscription-list\",children:showSubscriptions?/*#__PURE__*/_jsxs(_Fragment,{children:[subscriptions.map(subscription=>/*#__PURE__*/_jsxs(\"div\",{className:\"subscription-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"subscription-logo\",children:subscription.logo&&/*#__PURE__*/_jsx(\"img\",{src:subscription.logo,alt:`${subscription.name} Logo`,style:{width:'32px',height:'32px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"subscription-name\",children:subscription.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"subscription-cost\",children:[\"Rs. \",subscription.cost]}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>handleDeleteSubscription(subscription.id),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash})})]},subscription.id)),/*#__PURE__*/_jsxs(\"button\",{className:\"add-subscription-button\",onClick:openAddSubscriptionModal,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus}),\" Add Subscription\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"reminder-list\",children:reminders.map(reminder=>{var _reminder$end_date,_reminder$end_date2;return/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-date\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"reminder-month\",children:(_reminder$end_date=reminder.end_date)===null||_reminder$end_date===void 0?void 0:_reminder$end_date.split(' ')[0]}),/*#__PURE__*/_jsx(\"span\",{className:\"reminder-day\",children:(_reminder$end_date2=reminder.end_date)===null||_reminder$end_date2===void 0?void 0:_reminder$end_date2.split(' ')[1]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"reminder-name\",children:reminder.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"reminder-cost\",children:[\"Rs. \",reminder.cost]}),/*#__PURE__*/_jsx(\"button\",{className:\"done-button\",onClick:()=>handleDeleteReminder(reminder.id),children:\"Done\"})]},reminder.id);})})})]}),isAddSubscriptionModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"LoginModalOverlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"LoginModal\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"CloseButton\",onClick:closeAddSubscriptionModal,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimes})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add Subscription\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddSubscription,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Service Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter service name\",value:newSubscriptionName,onChange:e=>setNewSubscriptionName(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Cost:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter cost\",value:newSubscriptionCost,onChange:e=>setNewSubscriptionCost(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Billing Cycle:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionReminder,onChange:e=>setNewSubscriptionReminder(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quarterly\",children:\"Quarterly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yearly\",children:\"Yearly\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sharable:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionSharable?'yes':'no',onChange:e=>setNewSubscriptionSharable(e.target.value==='yes'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputGroup\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auto Renew:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionAutoRenew?'yes':'no',onChange:e=>setNewSubscriptionAutoRenew(e.target.value==='yes'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"LoginButton\",children:\"Add Subscription\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-left-ellipse\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-right-ellipse\"})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useMemo","useEffect","FontAwesomeIcon","faCircleUser","faPlus","faTrash","faTimes","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","navigate","expenseRange","setExpenseRange","showSubscriptions","setShowSubscriptions","newSubscriptionName","setNewSubscriptionName","newSubscriptionCost","setNewSubscriptionCost","newSubscriptionReminder","setNewSubscriptionReminder","newSubscriptionSharable","setNewSubscriptionSharable","newSubscriptionAutoRenew","setNewSubscriptionAutoRenew","subscriptions","setSubscriptions","reminders","setReminders","expenseData","setExpenseData","months","barHeights","isDropdownOpen","setIsDropdownOpen","userInfo","setUserInfo","username","email","API_BASE_URL","fetch","credentials","then","res","status","json","data","catch","err","console","error","log","toLowerCase","replace","handleTabClick","tab","handleDeleteReminder","id","method","filter","reminder","handleExpenseRangeChange","event","target","value","handleDeleteSubscription","sub","handleAddSubscription","e","preventDefault","newSubscription","name","cost","is_shareable","is_autorenew","headers","body","JSON","stringify","end_date","renew_date","closeAddSubscriptionModal","handleLogout","toggleDropdown","filteredExpenseData","allMonths","allBarHeights","currentMonthIndex","Date","getMonth","monthNames","orderedMonths","orderedHeights","i","monthIndex","push","backendIndex","indexOf","filteredMonths","filteredHeights","slice","isAddSubscriptionModalOpen","setIsAddSubscriptionModalOpen","openAddSubscriptionModal","className","children","to","icon","onClick","onChange","map","height","index","style","month","subscription","logo","src","alt","width","_reminder$end_date","_reminder$end_date2","split","onSubmit","type","placeholder"],"sources":["/home/anmol/DEShaw-Project/subspot/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport './Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleUser, faPlus, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const [expenseRange, setExpenseRange] = useState('Past year');\n  const [showSubscriptions, setShowSubscriptions] = useState(true);\n  const [newSubscriptionName, setNewSubscriptionName] = useState('');\n  const [newSubscriptionCost, setNewSubscriptionCost] = useState('');\n  const [newSubscriptionReminder, setNewSubscriptionReminder] = useState('monthly');\n  const [newSubscriptionSharable, setNewSubscriptionSharable] = useState(true);\n  const [newSubscriptionAutoRenew, setNewSubscriptionAutoRenew] = useState(false);\n\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [expenseData, setExpenseData] = useState({ months: [], barHeights: [] });\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({ username: '', email: '' });\n\n  const API_BASE_URL = 'http://localhost:8000/';\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}auth/user/`, { credentials: 'include' })\n      .then(res => {\n        if (res.status === 401) {\n          navigate('/'); // Redirect to landing (not authenticated)\n          return;\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (data) {\n          setUserInfo({ username: data.username, email: data.email });\n        }\n      })\n      .catch(err => console.error('Error fetching user info:', err));\n\n    fetch(`${API_BASE_URL}subscriptions/`, { credentials: 'include' })\n      .then(res => res.json())\n      .then(data => {\n        console.log('Subscriptions:', data);\n        setSubscriptions(data);\n      })\n      .catch(err => console.error('Error fetching subscriptions:', err));\n\n    fetch(`${API_BASE_URL}reminders/`, { credentials: 'include' })\n      .then(res => res.json())\n      .then(data => {\n        console.log('Reminders:', data);\n        setReminders(data);\n      })\n      .catch(err => console.error('Error fetching reminders:', err));\n\n    fetch(`${API_BASE_URL}expenses/?range=${expenseRange.toLowerCase().replace(' ', '_')}`, { credentials: 'include' })\n      .then(res => res.json())\n      .then(data => {\n        console.log('Expenses:', data);\n        setExpenseData({ months: data.months || [], barHeights: data.barHeights || [] });\n      })\n      .catch(err => console.error('Error fetching expenses:', err));  \n  }, [expenseRange, navigate]);\n  const handleTabClick = (tab) => setShowSubscriptions(tab === 'subscriptions');\n\n  const handleDeleteReminder = (id) => {\n    fetch(`${API_BASE_URL}subscriptions/${id}/`, {\n      method: 'DELETE',\n      credentials: 'include',\n    })\n      .then(() => setReminders(reminders.filter(reminder => reminder.id !== id)))\n      .catch(err => console.error('Error deleting reminder:', err));\n  };\n\n  const handleExpenseRangeChange = (event) => setExpenseRange(event.target.value);\n\n  const handleDeleteSubscription = (id) => {\n    fetch(`${API_BASE_URL}subscriptions/${id}/`, {\n      method: 'DELETE',\n      credentials: 'include',\n    })\n      .then(() => {\n        setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n        setReminders(reminders.filter(reminder => reminder.id !== id));\n      })\n      .catch(err => console.error('Error deleting subscription:', err));\n  };\n\n  const handleAddSubscription = (e) => {\n    e.preventDefault();\n    const newSubscription = {\n      name: newSubscriptionName,\n      reminder: newSubscriptionReminder,\n      cost: newSubscriptionCost,\n      is_shareable: newSubscriptionSharable,\n      is_autorenew: newSubscriptionAutoRenew,\n    };\n\n    fetch(`${API_BASE_URL}subscriptions/`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newSubscription),\n      credentials: 'include',\n    })\n      .then(res => res.json())\n      .then(data => {\n        setSubscriptions([...subscriptions, data]);\n        if (!data.is_autorenew) {  \n          setReminders([...reminders, { id: data.id, name: data.name, cost: data.cost, end_date: data.renew_date }]);\n        }\n        closeAddSubscriptionModal();\n        setNewSubscriptionName('');\n        setNewSubscriptionCost('');\n        setNewSubscriptionReminder('monthly');\n        setNewSubscriptionSharable(true);\n        setNewSubscriptionAutoRenew(false);\n      })\n      .catch(err => console.error('Error adding subscription:', err));\n  };\n  const handleLogout = () => {\n    fetch(`${API_BASE_URL}auth/logout/`, {\n      method: 'POST',\n      credentials: 'include',\n    })\n      .then(() => {\n        setIsDropdownOpen(false);\n        navigate('/');\n      })\n      .catch(err => console.error('Logout error:', err));\n  };\n\n  const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen);\n  const filteredExpenseData = useMemo(() => {\n    const allMonths = expenseData.months || [];\n    const allBarHeights = expenseData.barHeights || [];\n    const currentMonthIndex = new Date().getMonth();\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    const orderedMonths = [];\n    const orderedHeights = [];\n    for (let i = 0; i < 12; i++) {\n      const monthIndex = (currentMonthIndex - 11 + i + 12) % 12;\n      orderedMonths.push(monthNames[monthIndex]);\n      const backendIndex = allMonths.indexOf(monthNames[monthIndex]);\n      orderedHeights.push(backendIndex !== -1 ? allBarHeights[backendIndex] : 0);\n    }\n\n    let filteredMonths = [];\n    let filteredHeights = [];\n\n    if (expenseRange === 'Last month') {\n      filteredMonths = [orderedMonths[11]];\n      filteredHeights = [orderedHeights[11]];\n    } else if (expenseRange === 'Last 6 months') {\n      filteredMonths = orderedMonths.slice(6, 12);\n      filteredHeights = orderedHeights.slice(6, 12);\n    } else {\n      filteredMonths = orderedMonths;\n      filteredHeights = orderedHeights;\n    }\n\n    console.log('Filtered Expense Data:', { months: filteredMonths, barHeights: filteredHeights });\n    return { months: filteredMonths, barHeights: filteredHeights };\n  }, [expenseData, expenseRange]);\n\n  const months = filteredExpenseData.months;\n  const barHeights = filteredExpenseData.barHeights;\n  const [isAddSubscriptionModalOpen, setIsAddSubscriptionModalOpen] = useState(false);\n  const openAddSubscriptionModal = () => setIsAddSubscriptionModalOpen(true);\n  const closeAddSubscriptionModal = () => setIsAddSubscriptionModalOpen(false);\n\n  return (\n    <div className=\"dashboard-container\">\n      <header className=\"dashboard-header\">\n        <nav className=\"dashboard-nav\">\n          <Link to=\"/dashboard\" className=\"nav-link active\">Dashboard</Link>\n          <Link to=\"/market\" className=\"nav-link\">Market</Link>\n          <Link to=\"/friends\" className=\"nav-link\">Friends</Link>\n          <div className=\"user-icon\">\n            <FontAwesomeIcon icon={faCircleUser} onClick={toggleDropdown}/>\n            {isDropdownOpen && (\n              <div className=\"user-dropdown\">\n                <p>Username: <span className=\"value\">{userInfo.username}</span></p>\n                <p>Email: <span className=\"value\">{userInfo.email}</span></p>\n                <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n              </div>\n            )}\n          </div>\n        </nav>\n      </header>\n\n      <main className=\"dashboard-content\">\n        <section className=\"expense-section\">\n          <div className=\"expense-header\">\n            <h2 className=\"section-title\">Expense</h2>\n            <select\n              className=\"expense-range-select\"\n              value={expenseRange}\n              onChange={handleExpenseRangeChange}\n            >\n              <option value=\"Past year\">Past year</option>\n              <option value=\"Last month\">Last month</option>\n              <option value=\"Last 6 months\">Last 6 months</option>\n            </select>\n          </div>\n          <div className=\"expense-chart\">\n            <div className=\"chart-y-axis\">\n              <span>Rs.3000</span>\n              <span>Rs.2000</span>\n              <span>Rs.1000</span>\n              <span>Rs.0</span>\n            </div>\n            <div className=\"chart-bars\">\n              {barHeights.map((height, index) => (\n                <div\n                  key={index}\n                  className=\"chart-bar\"\n                  style={{ height: `${(height / 3000) * 100}%` }}\n                ></div>\n              ))}\n            </div>\n            <div className=\"chart-labels\">\n              {months.map((month, index) => (\n                <span key={index}>{month.slice(0, 3)}</span>\n              ))}\n            </div>\n            <div className=\"chart-horizontal-lines\">\n              <div className=\"horizontal-line\"></div>\n              <div className=\"horizontal-line\"></div>\n              <div className=\"horizontal-line\"></div>\n              <div className=\"horizontal-line\"></div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"subscriptions-section\">\n          <div className=\"section-tabs\">\n            <button\n              className={`tab-button ${showSubscriptions ? 'active' : ''}`}\n              onClick={() => handleTabClick('subscriptions')}\n            >\n              Subscriptions\n            </button>\n            <button\n              className={`tab-button ${!showSubscriptions ? 'active' : ''}`}\n              onClick={() => handleTabClick('reminders')}\n            >\n              Reminders\n            </button>\n          </div>\n          <div className=\"subscription-list\">\n            {showSubscriptions ? (\n              <>\n                {subscriptions.map((subscription) => (\n                  <div className=\"subscription-item\" key={subscription.id}>\n                    <div className=\"subscription-logo\">\n                      {subscription.logo && (\n                        <img src={subscription.logo} alt={`${subscription.name} Logo`} style={{ width: '32px', height: '32px' }} />\n                      )}\n                    </div>\n                    <div className=\"subscription-name\">{subscription.name}</div>\n                    <div className=\"subscription-cost\">Rs. {subscription.cost}</div>\n                    <button\n                      className=\"delete-button\"\n                      onClick={() => handleDeleteSubscription(subscription.id)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                  </div>\n                ))}\n                <button className=\"add-subscription-button\" onClick={openAddSubscriptionModal}>\n                  <FontAwesomeIcon icon={faPlus} /> Add Subscription\n                </button>\n              </>\n            ) : (\n              <div className=\"reminder-list\">\n                {reminders.map((reminder) => (\n                  <div className=\"reminder-item\" key={reminder.id}>\n                    <div className=\"reminder-date\">\n                      <span className=\"reminder-month\">{reminder.end_date?.split(' ')[0]}</span>\n                      <span className=\"reminder-day\">{reminder.end_date?.split(' ')[1]}</span>\n                    </div>\n                    <div className=\"reminder-name\">{reminder.name}</div>\n                    <div className=\"reminder-cost\">Rs. {reminder.cost}</div>\n                    <button\n                      className=\"done-button\"\n                      onClick={() => handleDeleteReminder(reminder.id)}\n                    >\n                      Done\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </section>\n\n        {isAddSubscriptionModalOpen && (\n          <div className=\"LoginModalOverlay\">\n            <div className=\"LoginModal\">\n              <button className=\"CloseButton\" onClick={closeAddSubscriptionModal}>\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n              <h2>Add Subscription</h2>\n              <form onSubmit={handleAddSubscription}>\n                <div className=\"InputGroup\">\n                  <label>Service Name:</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter service name\"\n                    value={newSubscriptionName}\n                    onChange={(e) => setNewSubscriptionName(e.target.value)}\n                  />\n                </div>\n                <div className=\"InputGroup\">\n                  <label>Cost:</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter cost\"\n                    value={newSubscriptionCost}\n                    onChange={(e) => setNewSubscriptionCost(e.target.value)}\n                  />\n                </div>\n                <div className=\"InputGroup\">\n                  <label>Billing Cycle:</label>\n                  <select\n                    value={newSubscriptionReminder}\n                    onChange={(e) => setNewSubscriptionReminder(e.target.value)}\n                  >\n                    <option value=\"monthly\">Monthly</option>\n                    <option value=\"quarterly\">Quarterly</option>\n                    <option value=\"yearly\">Yearly</option>\n                  </select>\n                </div>\n                <div className=\"InputGroup\">\n                  <label>Sharable:</label>\n                  <select\n                    value={newSubscriptionSharable ? 'yes' : 'no'}\n                    onChange={(e) => setNewSubscriptionSharable(e.target.value === 'yes')}\n                  >\n                    <option value=\"yes\">Yes</option>\n                    <option value=\"no\">No</option>\n                  </select>\n                </div>\n                <div className=\"InputGroup\">\n                  <label>Auto Renew:</label>\n                  <select\n                    value={newSubscriptionAutoRenew ? 'yes' : 'no'}\n                    onChange={(e) => setNewSubscriptionAutoRenew(e.target.value === 'yes')}\n                  >\n                    <option value=\"yes\">Yes</option>\n                    <option value=\"no\">No</option>\n                  </select>\n                </div>\n                <button className=\"LoginButton\">Add Subscription</button>\n              </form>\n            </div>\n          </div>\n        )}\n        <div className=\"bottom-left-ellipse\"></div>\n        <div className=\"bottom-right-ellipse\"></div>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}