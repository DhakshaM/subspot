{"ast":null,"code":"var _jsxFileName = \"D:\\\\DESIS ASCEND Educare Program Edition 4 (2024)\\\\Desis Project\\\\subspot\\\\frontend\\\\src\\\\components\\\\ChatListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faEllipsisV, faEllipsisH, faDownload, faPaperclip, faPaperPlane, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport './ChatListPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialChats = [{\n  id: 1,\n  name: 'Friend 1'\n}, {\n  id: 2,\n  name: 'Friend 2'\n}, {\n  id: 3,\n  name: 'Seller 1'\n}];\nconst ChatListPage = () => {\n  _s();\n  var _chatList$find, _messages$selectedCha;\n  const [chatList, setChatList] = useState(initialChats);\n  const [selectedChat, setSelectedChat] = useState(null);\n\n  // Each key is chatId -> array of messages\n  const [messages, setMessages] = useState({\n    1: [{\n      sender: 'theirs',\n      text: 'Hello!',\n      time: '10:00 AM',\n      type: 'text'\n    }, {\n      sender: 'mine',\n      text: 'Hi there!',\n      time: '10:01 AM',\n      type: 'text'\n    }],\n    2: [],\n    3: []\n  });\n\n  // Track typed message and the message being replied to\n  const [typedMessage, setTypedMessage] = useState('');\n  const [replyMsg, setReplyMsg] = useState(null);\n\n  // For file uploads\n  const fileInputRef = useRef(null);\n\n  // Image/PDF modals\n  const [modalImage, setModalImage] = useState(null);\n  const [pdfModal, setPdfModal] = useState({\n    open: false,\n    src: '',\n    fileName: ''\n  });\n\n  // Header 3-dot menu (Clear/Delete chat)\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Per-message options\n  const [openMsgOptions, setOpenMsgOptions] = useState(null);\n\n  // Delete popup modal\n  const [deletePopup, setDeletePopup] = useState({\n    open: false,\n    msgIndex: null\n  });\n\n  // Helper to get a simple time stamp\n  const getTimeStamp = () => {\n    return new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Select a chat\n  const handleSelectChat = chatId => {\n    setSelectedChat(chatId);\n    setTypedMessage('');\n    setMenuOpen(false);\n    setReplyMsg(null);\n  };\n\n  // Determine the display name if replying to a \"theirs\" message\n  const getReplySenderName = sender => {\n    if (sender === 'mine') return 'You';\n    // If it's 'theirs', get the chat's name\n    const chatObj = chatList.find(chat => chat.id === selectedChat);\n    return chatObj ? chatObj.name : 'Other';\n  };\n\n  // Send message\n  const handleSend = () => {\n    if (!typedMessage.trim() || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n\n    // Build the new message object\n    const newMessage = {\n      sender: 'mine',\n      text: typedMessage,\n      time: timeStamp,\n      type: 'text'\n    };\n\n    // If replying, store reference to the original message\n    if (replyMsg) {\n      newMessage.replyTo = {\n        sender: replyMsg.sender,\n        text: replyMsg.text\n      };\n    }\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: [...(prev[selectedChat] || []), newMessage]\n    }));\n    setTypedMessage('');\n    setReplyMsg(null);\n  };\n\n  // Handle upload click\n  const handleUploadClick = () => {\n    var _fileInputRef$current;\n    if (!selectedChat) return;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n\n  // Handle file selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n    const fileName = file.name;\n    const fileType = file.type.toLowerCase();\n    const reader = new FileReader();\n    reader.onload = () => {\n      let newMsg = {\n        sender: 'mine',\n        time: timeStamp\n      };\n      if (fileType.startsWith('image/')) {\n        newMsg.type = 'image';\n        newMsg.src = reader.result;\n      } else if (fileType === 'application/pdf' || fileName.toLowerCase().endsWith('.pdf')) {\n        newMsg.type = 'pdf';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      } else {\n        newMsg.type = 'file';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      }\n      setMessages(prev => ({\n        ...prev,\n        [selectedChat]: [...(prev[selectedChat] || []), newMsg]\n      }));\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n\n  // Image modal\n  const openImageModal = src => setModalImage(src);\n  const closeImageModal = () => setModalImage(null);\n\n  // PDF modal\n  const openPdfModal = (src, fileName) => setPdfModal({\n    open: true,\n    src,\n    fileName\n  });\n  const closePdfModal = () => setPdfModal({\n    open: false,\n    src: '',\n    fileName: ''\n  });\n\n  // Clear chat\n  const handleClearChat = () => {\n    if (!selectedChat) return;\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: []\n    }));\n    setMenuOpen(false);\n  };\n\n  // Delete entire chat\n  const handleDeleteChat = () => {\n    if (!selectedChat) return;\n    setChatList(prev => prev.filter(chat => chat.id !== selectedChat));\n    setMessages(prev => {\n      const newMsgs = {\n        ...prev\n      };\n      delete newMsgs[selectedChat];\n      return newMsgs;\n    });\n    setSelectedChat(null);\n    setMenuOpen(false);\n  };\n\n  // Toggle header menu\n  const toggleMenu = () => setMenuOpen(prev => !prev);\n\n  // Toggle message options\n  const toggleMsgOptions = index => {\n    setOpenMsgOptions(prev => prev === index ? null : index);\n  };\n\n  // Open delete confirmation for a message\n  const openDeletePopup = index => {\n    setDeletePopup({\n      open: true,\n      msgIndex: index\n    });\n  };\n\n  // Actually delete the message\n  const handleDeleteMessage = (chatId, msgIndex, deleteForAll = false) => {\n    // Basic removal from this chat\n    setMessages(prev => {\n      const updated = [...(prev[chatId] || [])];\n      updated.splice(msgIndex, 1);\n      return {\n        ...prev,\n        [chatId]: updated\n      };\n    });\n    setDeletePopup({\n      open: false,\n      msgIndex: null\n    });\n    setOpenMsgOptions(null);\n  };\n\n  // Set the message we are replying to\n  const handleReplyMessage = msg => {\n    setReplyMsg(msg);\n    setOpenMsgOptions(null);\n  };\n\n  // Close 3-dot header menu if clicking outside\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chats-left-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"back-link arrow-only\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chats-title\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-list\",\n          children: chatList.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleSelectChat(chat.id),\n            children: chat.name\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-right-panel\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"chats-right-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-contact-name\",\n              children: (_chatList$find = chatList.find(chat => chat.id === selectedChat)) === null || _chatList$find === void 0 ? void 0 : _chatList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-actions\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEllipsisV,\n                className: \"ellipsis-icon\",\n                onClick: toggleMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-menu-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleClearChat,\n                  children: \"Clear Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleDeleteChat,\n                  children: \"Delete Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: (_messages$selectedCha = messages[selectedChat]) === null || _messages$selectedCha === void 0 ? void 0 : _messages$selectedCha.map((msg, index) => {\n              const isMine = msg.sender === 'mine';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message-wrapper ${isMine ? 'mine' : 'theirs'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `msg-options-container ${isMine ? 'options-left' : 'options-right'}`,\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEllipsisH,\n                    className: \"msg-options-icon\",\n                    onClick: () => toggleMsgOptions(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `message-bubble ${msg.sender}`,\n                  children: [msg.replyTo && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mini-reply-bubble\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mini-reply-sender\",\n                      children: msg.replyTo.sender === 'mine' ? 'You' : getReplySenderName('theirs')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mini-reply-text\",\n                      children: msg.replyTo.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 27\n                  }, this), msg.type === 'text' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-text\",\n                      children: msg.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), msg.type === 'image' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: msg.src,\n                      alt: \"sent\",\n                      className: \"message-image\",\n                      onClick: () => openImageModal(msg.src)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), msg.type === 'pdf' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-preview\",\n                      onClick: () => openPdfModal(msg.src, msg.fileName),\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faFilePdf,\n                        className: \"pdf-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-filename\",\n                        children: msg.fileName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), msg.type === 'file' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: msg.src,\n                      download: msg.fileName,\n                      className: \"file-link\",\n                      title: \"Download File\",\n                      children: msg.fileName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), openMsgOptions === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msg-options-dropdown\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"msg-option-item\",\n                    onClick: () => handleReplyMessage(msg),\n                    children: \"Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"msg-option-item\",\n                    onClick: () => openDeletePopup(index),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), replyMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reply-text\",\n              children: replyMsg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cancel-reply\",\n              onClick: () => setReplyMsg(null),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type a message...\",\n              value: typedMessage,\n              onChange: e => setTypedMessage(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') handleSend();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane,\n              className: \"send-icon\",\n              onClick: handleSend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              },\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              className: \"upload-icon\",\n              onClick: handleUploadClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-placeholder\",\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), deletePopup.open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-popup-modal\",\n      onClick: () => setDeletePopup({\n        open: false,\n        msgIndex: null\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-popup-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Delete message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-popup-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-option\",\n            onClick: () => handleDeleteMessage(selectedChat, deletePopup.msgIndex, false),\n            children: \"Delete for me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-option\",\n            onClick: () => handleDeleteMessage(selectedChat, deletePopup.msgIndex, true),\n            children: \"Delete for all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal\",\n      onClick: closeImageModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-modal-icon\",\n          onClick: closeImageModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          alt: \"Enlarged\",\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: modalImage,\n          download: \"image.png\",\n          className: \"download-link\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this), pdfModal.open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-modal\",\n      onClick: closePdfModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-pdf-modal\",\n          onClick: closePdfModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"embed\", {\n          src: pdfModal.src,\n          type: \"application/pdf\",\n          className: \"pdf-embed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: pdfModal.src,\n          download: pdfModal.fileName,\n          className: \"download-pdf-icon\",\n          title: \"Download PDF\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatListPage, \"VXwMIx96BerNHTgZER6T1VtNFII=\");\n_c = ChatListPage;\nexport default ChatListPage;\nvar _c;\n$RefreshReg$(_c, \"ChatListPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","FontAwesomeIcon","faArrowLeft","faEllipsisV","faEllipsisH","faDownload","faPaperclip","faPaperPlane","faFilePdf","jsxDEV","_jsxDEV","Fragment","_Fragment","initialChats","id","name","ChatListPage","_s","_chatList$find","_messages$selectedCha","chatList","setChatList","selectedChat","setSelectedChat","messages","setMessages","sender","text","time","type","typedMessage","setTypedMessage","replyMsg","setReplyMsg","fileInputRef","modalImage","setModalImage","pdfModal","setPdfModal","open","src","fileName","menuOpen","setMenuOpen","menuRef","openMsgOptions","setOpenMsgOptions","deletePopup","setDeletePopup","msgIndex","getTimeStamp","Date","toLocaleTimeString","hour","minute","handleSelectChat","chatId","getReplySenderName","chatObj","find","chat","handleSend","trim","timeStamp","newMessage","replyTo","prev","handleUploadClick","_fileInputRef$current","current","click","handleFileChange","e","file","target","files","fileType","toLowerCase","reader","FileReader","onload","newMsg","startsWith","result","endsWith","readAsDataURL","value","openImageModal","closeImageModal","openPdfModal","closePdfModal","handleClearChat","handleDeleteChat","filter","newMsgs","toggleMenu","toggleMsgOptions","index","openDeletePopup","handleDeleteMessage","deleteForAll","updated","splice","handleReplyMessage","msg","handleClickOutside","contains","document","addEventListener","removeEventListener","className","children","to","icon","_jsxFileName","lineNumber","columnNumber","map","onClick","ref","isMine","alt","href","download","title","placeholder","onChange","onKeyDown","key","accept","style","display","stopPropagation","_c","$RefreshReg$"],"sources":["D:/DESIS ASCEND Educare Program Edition 4 (2024)/Desis Project/subspot/frontend/src/components/ChatListPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowLeft,\r\n  faEllipsisV,\r\n  faEllipsisH,\r\n  faDownload,\r\n  faPaperclip,\r\n  faPaperPlane,\r\n  faFilePdf,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './ChatListPage.css';\r\n\r\nconst initialChats = [\r\n  { id: 1, name: 'Friend 1' },\r\n  { id: 2, name: 'Friend 2' },\r\n  { id: 3, name: 'Seller 1' },\r\n];\r\n\r\nconst ChatListPage = () => {\r\n  const [chatList, setChatList] = useState(initialChats);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n\r\n  // Each key is chatId -> array of messages\r\n  const [messages, setMessages] = useState({\r\n    1: [\r\n      { sender: 'theirs', text: 'Hello!', time: '10:00 AM', type: 'text' },\r\n      { sender: 'mine', text: 'Hi there!', time: '10:01 AM', type: 'text' },\r\n    ],\r\n    2: [],\r\n    3: [],\r\n  });\r\n\r\n  // Track typed message and the message being replied to\r\n  const [typedMessage, setTypedMessage] = useState('');\r\n  const [replyMsg, setReplyMsg] = useState(null);\r\n\r\n  // For file uploads\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Image/PDF modals\r\n  const [modalImage, setModalImage] = useState(null);\r\n  const [pdfModal, setPdfModal] = useState({ open: false, src: '', fileName: '' });\r\n\r\n  // Header 3-dot menu (Clear/Delete chat)\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n  // Per-message options\r\n  const [openMsgOptions, setOpenMsgOptions] = useState(null);\r\n\r\n  // Delete popup modal\r\n  const [deletePopup, setDeletePopup] = useState({ open: false, msgIndex: null });\r\n\r\n  // Helper to get a simple time stamp\r\n  const getTimeStamp = () => {\r\n    return new Date().toLocaleTimeString([], {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  // Select a chat\r\n  const handleSelectChat = (chatId) => {\r\n    setSelectedChat(chatId);\r\n    setTypedMessage('');\r\n    setMenuOpen(false);\r\n    setReplyMsg(null);\r\n  };\r\n\r\n  // Determine the display name if replying to a \"theirs\" message\r\n  const getReplySenderName = (sender) => {\r\n    if (sender === 'mine') return 'You';\r\n    // If it's 'theirs', get the chat's name\r\n    const chatObj = chatList.find((chat) => chat.id === selectedChat);\r\n    return chatObj ? chatObj.name : 'Other';\r\n  };\r\n\r\n  // Send message\r\n  const handleSend = () => {\r\n    if (!typedMessage.trim() || !selectedChat) return;\r\n    const timeStamp = getTimeStamp();\r\n\r\n    // Build the new message object\r\n    const newMessage = {\r\n      sender: 'mine',\r\n      text: typedMessage,\r\n      time: timeStamp,\r\n      type: 'text',\r\n    };\r\n\r\n    // If replying, store reference to the original message\r\n    if (replyMsg) {\r\n      newMessage.replyTo = {\r\n        sender: replyMsg.sender,\r\n        text: replyMsg.text,\r\n      };\r\n    }\r\n\r\n    setMessages((prev) => ({\r\n      ...prev,\r\n      [selectedChat]: [...(prev[selectedChat] || []), newMessage],\r\n    }));\r\n\r\n    setTypedMessage('');\r\n    setReplyMsg(null);\r\n  };\r\n\r\n  // Handle upload click\r\n  const handleUploadClick = () => {\r\n    if (!selectedChat) return;\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file || !selectedChat) return;\r\n\r\n    const timeStamp = getTimeStamp();\r\n    const fileName = file.name;\r\n    const fileType = file.type.toLowerCase();\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      let newMsg = {\r\n        sender: 'mine',\r\n        time: timeStamp,\r\n      };\r\n      if (fileType.startsWith('image/')) {\r\n        newMsg.type = 'image';\r\n        newMsg.src = reader.result;\r\n      } else if (fileType === 'application/pdf' || fileName.toLowerCase().endsWith('.pdf')) {\r\n        newMsg.type = 'pdf';\r\n        newMsg.src = reader.result;\r\n        newMsg.fileName = fileName;\r\n      } else {\r\n        newMsg.type = 'file';\r\n        newMsg.src = reader.result;\r\n        newMsg.fileName = fileName;\r\n      }\r\n      setMessages((prev) => ({\r\n        ...prev,\r\n        [selectedChat]: [...(prev[selectedChat] || []), newMsg],\r\n      }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = '';\r\n  };\r\n\r\n  // Image modal\r\n  const openImageModal = (src) => setModalImage(src);\r\n  const closeImageModal = () => setModalImage(null);\r\n\r\n  // PDF modal\r\n  const openPdfModal = (src, fileName) => setPdfModal({ open: true, src, fileName });\r\n  const closePdfModal = () => setPdfModal({ open: false, src: '', fileName: '' });\r\n\r\n  // Clear chat\r\n  const handleClearChat = () => {\r\n    if (!selectedChat) return;\r\n    setMessages((prev) => ({ ...prev, [selectedChat]: [] }));\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Delete entire chat\r\n  const handleDeleteChat = () => {\r\n    if (!selectedChat) return;\r\n    setChatList((prev) => prev.filter((chat) => chat.id !== selectedChat));\r\n    setMessages((prev) => {\r\n      const newMsgs = { ...prev };\r\n      delete newMsgs[selectedChat];\r\n      return newMsgs;\r\n    });\r\n    setSelectedChat(null);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Toggle header menu\r\n  const toggleMenu = () => setMenuOpen((prev) => !prev);\r\n\r\n  // Toggle message options\r\n  const toggleMsgOptions = (index) => {\r\n    setOpenMsgOptions((prev) => (prev === index ? null : index));\r\n  };\r\n\r\n  // Open delete confirmation for a message\r\n  const openDeletePopup = (index) => {\r\n    setDeletePopup({ open: true, msgIndex: index });\r\n  };\r\n\r\n  // Actually delete the message\r\n  const handleDeleteMessage = (chatId, msgIndex, deleteForAll = false) => {\r\n    // Basic removal from this chat\r\n    setMessages((prev) => {\r\n      const updated = [...(prev[chatId] || [])];\r\n      updated.splice(msgIndex, 1);\r\n      return { ...prev, [chatId]: updated };\r\n    });\r\n    setDeletePopup({ open: false, msgIndex: null });\r\n    setOpenMsgOptions(null);\r\n  };\r\n\r\n  // Set the message we are replying to\r\n  const handleReplyMessage = (msg) => {\r\n    setReplyMsg(msg);\r\n    setOpenMsgOptions(null);\r\n  };\r\n\r\n  // Close 3-dot header menu if clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\r\n        setMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chats-container\">\r\n      <div className=\"chats-wrapper\">\r\n        {/* Left Panel */}\r\n        <div className=\"chats-left-panel\">\r\n          <header className=\"chats-left-header\">\r\n            <Link to=\"/dashboard\" className=\"back-link arrow-only\">\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </Link>\r\n            <h2 className=\"chats-title\">Chat</h2>\r\n          </header>\r\n\r\n          <ul className=\"chat-list\">\r\n            {chatList.map((chat) => (\r\n              <li\r\n                key={chat.id}\r\n                className={`chat-item ${selectedChat === chat.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectChat(chat.id)}\r\n              >\r\n                {chat.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Right Panel */}\r\n        <div className=\"chats-right-panel\">\r\n          {selectedChat ? (\r\n            <div className=\"chat-content\">\r\n              <header className=\"chats-right-header\">\r\n                <span className=\"chat-contact-name\">\r\n                  {chatList.find((chat) => chat.id === selectedChat)?.name}\r\n                </span>\r\n                <div className=\"chat-header-actions\" ref={menuRef}>\r\n                  <FontAwesomeIcon\r\n                    icon={faEllipsisV}\r\n                    className=\"ellipsis-icon\"\r\n                    onClick={toggleMenu}\r\n                  />\r\n                  {menuOpen && (\r\n                    <div className=\"chat-menu-dropdown\">\r\n                      <div className=\"dropdown-item\" onClick={handleClearChat}>\r\n                        Clear Chat\r\n                      </div>\r\n                      <div className=\"dropdown-item\" onClick={handleDeleteChat}>\r\n                        Delete Chat\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </header>\r\n\r\n              <div className=\"chat-messages\">\r\n                {messages[selectedChat]?.map((msg, index) => {\r\n                  const isMine = msg.sender === 'mine';\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={`message-wrapper ${isMine ? 'mine' : 'theirs'}`}\r\n                    >\r\n                      {/* 3-dots outside the bubble, small gap */}\r\n                      <div\r\n                        className={`msg-options-container ${\r\n                          isMine ? 'options-left' : 'options-right'\r\n                        }`}\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          icon={faEllipsisH}\r\n                          className=\"msg-options-icon\"\r\n                          onClick={() => toggleMsgOptions(index)}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className={`message-bubble ${msg.sender}`}>\r\n                        {/* If this message is a reply, show a mini-bubble for the original text */}\r\n                        {msg.replyTo && (\r\n                          <div className=\"mini-reply-bubble\">\r\n                            <span className=\"mini-reply-sender\">\r\n                              {msg.replyTo.sender === 'mine'\r\n                                ? 'You'\r\n                                : getReplySenderName('theirs')}\r\n                            </span>\r\n                            <span className=\"mini-reply-text\">{msg.replyTo.text}</span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Then show the actual content */}\r\n                        {msg.type === 'text' && (\r\n                          <>\r\n                            <div className=\"message-text\">{msg.text}</div>\r\n                            <div className=\"message-time\">{msg.time}</div>\r\n                          </>\r\n                        )}\r\n                        {msg.type === 'image' && (\r\n                          <>\r\n                            <img\r\n                              src={msg.src}\r\n                              alt=\"sent\"\r\n                              className=\"message-image\"\r\n                              onClick={() => openImageModal(msg.src)}\r\n                            />\r\n                            <div className=\"message-time\">{msg.time}</div>\r\n                          </>\r\n                        )}\r\n                        {msg.type === 'pdf' && (\r\n                          <>\r\n                            <div\r\n                              className=\"pdf-preview\"\r\n                              onClick={() => openPdfModal(msg.src, msg.fileName)}\r\n                            >\r\n                              <FontAwesomeIcon icon={faFilePdf} className=\"pdf-icon\" />\r\n                              <span className=\"pdf-filename\">{msg.fileName}</span>\r\n                            </div>\r\n                            <div className=\"message-time\">{msg.time}</div>\r\n                          </>\r\n                        )}\r\n                        {msg.type === 'file' && (\r\n                          <>\r\n                            <a\r\n                              href={msg.src}\r\n                              download={msg.fileName}\r\n                              className=\"file-link\"\r\n                              title=\"Download File\"\r\n                            >\r\n                              {msg.fileName}\r\n                            </a>\r\n                            <div className=\"message-time\">{msg.time}</div>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* If the options for this message are open */}\r\n                      {openMsgOptions === index && (\r\n                        <div className=\"msg-options-dropdown\">\r\n                          <div\r\n                            className=\"msg-option-item\"\r\n                            onClick={() => handleReplyMessage(msg)}\r\n                          >\r\n                            Reply\r\n                          </div>\r\n                          <div\r\n                            className=\"msg-option-item\"\r\n                            onClick={() => openDeletePopup(index)}\r\n                          >\r\n                            Delete\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* If user is replying, show a bubble above input */}\r\n              {replyMsg && (\r\n                <div className=\"reply-bubble\">\r\n                  <span className=\"reply-text\">{replyMsg.text}</span>\r\n                  <span className=\"cancel-reply\" onClick={() => setReplyMsg(null)}>\r\n                    &times;\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {/* Message input area */}\r\n              <div className=\"chats-input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type a message...\"\r\n                  value={typedMessage}\r\n                  onChange={(e) => setTypedMessage(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') handleSend();\r\n                  }}\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faPaperPlane}\r\n                  className=\"send-icon\"\r\n                  onClick={handleSend}\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: 'none' }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faPaperclip}\r\n                  className=\"upload-icon\"\r\n                  onClick={handleUploadClick}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"chat-placeholder\">Start Messaging</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Delete Popup Modal */}\r\n      {deletePopup.open && (\r\n        <div\r\n          className=\"delete-popup-modal\"\r\n          onClick={() => setDeletePopup({ open: false, msgIndex: null })}\r\n        >\r\n          <div className=\"delete-popup-content\" onClick={(e) => e.stopPropagation()}>\r\n            <p>Delete message:</p>\r\n            <div className=\"delete-popup-options\">\r\n              <span\r\n                className=\"delete-option\"\r\n                onClick={() =>\r\n                  handleDeleteMessage(selectedChat, deletePopup.msgIndex, false)\r\n                }\r\n              >\r\n                Delete for me\r\n              </span>\r\n              <span\r\n                className=\"delete-option\"\r\n                onClick={() =>\r\n                  handleDeleteMessage(selectedChat, deletePopup.msgIndex, true)\r\n                }\r\n              >\r\n                Delete for all\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Image Modal */}\r\n      {modalImage && (\r\n        <div className=\"image-modal\" onClick={closeImageModal}>\r\n          <div className=\"image-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <span className=\"close-modal-icon\" onClick={closeImageModal}>\r\n              &times;\r\n            </span>\r\n            <img src={modalImage} alt=\"Enlarged\" className=\"modal-image\" />\r\n            <a href={modalImage} download=\"image.png\" className=\"download-link\">\r\n              <FontAwesomeIcon icon={faDownload} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* PDF Modal */}\r\n      {pdfModal.open && (\r\n        <div className=\"pdf-modal\" onClick={closePdfModal}>\r\n          <div className=\"pdf-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <span className=\"close-pdf-modal\" onClick={closePdfModal}>\r\n              &times;\r\n            </span>\r\n            <embed src={pdfModal.src} type=\"application/pdf\" className=\"pdf-embed\" />\r\n            <a\r\n              href={pdfModal.src}\r\n              download={pdfModal.fileName}\r\n              className=\"download-pdf-icon\"\r\n              title=\"Download PDF\"\r\n            >\r\n              <FontAwesomeIcon icon={faDownload} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}