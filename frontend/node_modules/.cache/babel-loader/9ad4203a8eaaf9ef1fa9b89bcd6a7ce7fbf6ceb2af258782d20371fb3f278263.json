{"ast":null,"code":"var _jsxFileName = \"/home/anmol/DEShaw-Project/subspot/frontend/src/components/ChatListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faEllipsisV, faEllipsisH, faDownload, faPaperclip, faPaperPlane, faFilePdf, faBan } from '@fortawesome/free-solid-svg-icons';\nimport './ChatListPage.css';\n\n// Update the API base URL to match the Dashboard.js pattern\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000/subspot/';\nconst ChatListPage = () => {\n  _s();\n  var _chatList$find;\n  const navigate = useNavigate();\n  // Chat state\n  const [chatList, setChatList] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [typedMessage, setTypedMessage] = useState('');\n  const [replyMsg, setReplyMsg] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Modals / popups\n  const [modalImage, setModalImage] = useState(null);\n  const [pdfModal, setPdfModal] = useState({\n    open: false,\n    src: '',\n    fileName: ''\n  });\n  const [deletePopup, setDeletePopup] = useState({\n    open: false,\n    msgIndex: null\n  });\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [openMsgOptions, setOpenMsgOptions] = useState(null);\n  const menuRef = useRef(null);\n  const msgOptionsRef = useRef(null);\n  const getTimeStamp = () => new Date().toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // Fetch user info like in Dashboard.js\n  useEffect(() => {\n    fetch(`${API_BASE_URL}auth/user/`, {\n      credentials: 'include'\n    }).then(res => {\n      if (res.status === 401) {\n        navigate('/');\n        return;\n      }\n      return res.json();\n    }).then(data => {\n      if (data) {\n        setUserInfo(data);\n      }\n    }).catch(err => console.error('Error fetching user info:', err));\n  }, [navigate]);\n\n  // Fetch chat list when component mounts - matches ChatListView in chat_views.py\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}chats/`, {\n          credentials: 'include'\n        });\n        if (response.status === 401) {\n          navigate('/');\n          return;\n        }\n        const data = await response.json();\n\n        // Transform the data to match the response from ChatListView\n        const fetchedChats = data.map(chat => {\n          var _chat$last_message;\n          return {\n            id: chat.id.toString(),\n            name: chat.other_participant.username || `Chat #${chat.id}`,\n            lastMessage: ((_chat$last_message = chat.last_message) === null || _chat$last_message === void 0 ? void 0 : _chat$last_message.text) || '',\n            unreadCount: chat.unread_count || 0\n          };\n        });\n        setChatList(fetchedChats);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching chats:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchChats();\n  }, [navigate]);\n\n  // Fetch messages when a chat is selected - matches ChatDetailView in chat_views.py\n  useEffect(() => {\n    if (!selectedChat) return;\n    const fetchMessages = async () => {\n      try {\n        // Create URLSearchParams for POST request to match the ChatDetailView\n        const formData = new URLSearchParams();\n        formData.append('chat_id', selectedChat);\n        const response = await fetch(`${API_BASE_URL}chats/detail/`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData\n        });\n        if (response.status === 401) {\n          navigate('/');\n          return;\n        }\n        const data = await response.json();\n\n        // Transform messages to match our component's structure\n        const transformedMessages = data.messages.map(msg => {\n          // This is the critical line - check if the sender_id matches the current user's id\n          const isMine = msg.sender_id === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.id);\n          const messageObj = {\n            id: msg.id,\n            user: isMine ? 'Me' : msg.sender_name,\n            // Use 'Me' for current user's messages\n            message: msg.text,\n            time: new Date(msg.created_at).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            }),\n            is_read: msg.is_read,\n            sender_id: msg.sender_id // Keep sender_id for reference\n          };\n          return messageObj;\n        });\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: transformedMessages\n        }));\n\n        // Mark messages as read when chat is selected\n        markMessagesAsRead(selectedChat);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedChat, navigate, userInfo]);\n\n  // Mark messages as read using MarkMessagesReadView\n  const markMessagesAsRead = async chatId => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append('chat_id', chatId);\n      await fetch(`${API_BASE_URL}messages/mark-read/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n\n      // Update the unreadCount in the chat list\n      setChatList(prev => prev.map(chat => chat.id === chatId ? {\n        ...chat,\n        unreadCount: 0\n      } : chat));\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  // Send a message using MessageCreateView in chat_views.py\n  const handleSend = async () => {\n    if (!typedMessage.trim() || !selectedChat) return;\n\n    // Create new message object for UI\n    const newMessage = {\n      id: 'temp-' + Date.now(),\n      // Temporary ID until server responds\n      user: 'Me',\n      message: typedMessage,\n      time: getTimeStamp(),\n      is_read: true // Messages from the current user are always \"read\"\n    };\n    if (replyMsg) {\n      newMessage.replyTo = {\n        user: replyMsg.user || 'Them',\n        message: replyMsg.message\n      };\n    }\n\n    // Optimistically update UI\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: [...(prev[selectedChat] || []), newMessage]\n    }));\n    try {\n      // Create form data for POST request to match MessageCreateView\n      const formData = new URLSearchParams();\n      formData.append('chat_id', selectedChat);\n      formData.append('text', typedMessage);\n\n      // Add reply_to_id if user is replying to a message\n      if (replyMsg !== null && replyMsg !== void 0 && replyMsg.id) {\n        formData.append('reply_to_id', replyMsg.id);\n      }\n\n      // Send to REST API using MessageCreateView\n      const response = await fetch(`${API_BASE_URL}messages/create/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n      if (response.status === 401) {\n        navigate('/');\n        return;\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Error sending message:', errorData.error);\n        return;\n      }\n      const data = await response.json();\n\n      // Update the message with the returned data\n      setMessages(prev => {\n        const currentMessages = [...prev[selectedChat]];\n        const lastIndex = currentMessages.length - 1;\n\n        // Update last message with ID from server and ensure it's marked as \"mine\"\n        currentMessages[lastIndex] = {\n          ...currentMessages[lastIndex],\n          id: data.id,\n          user: 'Me',\n          // Explicitly set as \"Me\" to ensure it appears on right side\n          sender_id: userInfo === null || userInfo === void 0 ? void 0 : userInfo.id // Store the sender ID to help with future comparisons\n        };\n        return {\n          ...prev,\n          [selectedChat]: currentMessages\n        };\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Reset input\n    setTypedMessage('');\n    setReplyMsg(null);\n  };\n\n  // File upload - since there's no direct file upload endpoint,\n  // this is a placeholder for integration with your file upload system\n  const handleUploadClick = () => {\n    var _fileInputRef$current;\n    if (!selectedChat) return;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file || !selectedChat) return;\n    const fileName = file.name;\n    const fileType = file.type.toLowerCase();\n    const timeStamp = getTimeStamp();\n\n    // Determine message type\n    let messageType = 'file';\n    if (fileType.startsWith('image/')) {\n      messageType = 'image';\n    } else if (fileType === 'application/pdf' || fileName.toLowerCase().endsWith('.pdf')) {\n      messageType = 'pdf';\n    }\n\n    // Create message for optimistic UI update\n    const reader = new FileReader();\n    reader.onload = async () => {\n      let newMsg = {\n        user: 'Me',\n        time: timeStamp\n      };\n      if (messageType === 'image') {\n        newMsg.type = 'image';\n        newMsg.src = reader.result;\n      } else if (messageType === 'pdf') {\n        newMsg.type = 'pdf';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      } else {\n        newMsg.type = 'file';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      }\n\n      // Update UI optimistically\n      setMessages(prev => ({\n        ...prev,\n        [selectedChat]: [...(prev[selectedChat] || []), newMsg]\n      }));\n\n      // Since there's no direct file upload endpoint in chat_views.py,\n      // this is a placeholder for integration with your file upload system\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n\n  // Start a new chat with a user using StartChatView\n  const startNewChat = async userId => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append('user_id', userId);\n      const response = await fetch(`${API_BASE_URL}chats/start/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n      if (response.status === 401) {\n        navigate('/');\n        return;\n      }\n      const data = await response.json();\n\n      // Add to chat list and select the new chat\n      setChatList(prev => {\n        if (!prev.some(chat => chat.id === data.id.toString())) {\n          var _data$last_message;\n          return [...prev, {\n            id: data.id.toString(),\n            name: data.other_participant.username || `Chat #${data.id}`,\n            lastMessage: ((_data$last_message = data.last_message) === null || _data$last_message === void 0 ? void 0 : _data$last_message.text) || '',\n            unreadCount: data.unread_count || 0\n          }];\n        }\n        return prev;\n      });\n      setSelectedChat(data.id.toString());\n    } catch (error) {\n      console.error('Error starting new chat:', error);\n    }\n  };\n\n  // Delete message - since there's no API endpoint for deleting messages in chat_views.py,\n  // this is a placeholder for future integration\n  const handleDeleteMessage = async (chatId, msgIndex, deleteForAll = false) => {\n    const message = messages[chatId][msgIndex];\n\n    // Optimistically update UI\n    setMessages(prev => {\n      const updated = [...(prev[chatId] || [])];\n      if (!deleteForAll) {\n        updated.splice(msgIndex, 1);\n      } else {\n        const originalMsg = updated[msgIndex];\n        updated[msgIndex] = {\n          ...originalMsg,\n          type: 'deleted',\n          message: 'You deleted this message',\n          replyTo: undefined,\n          src: undefined,\n          fileName: undefined\n        };\n      }\n      return {\n        ...prev,\n        [chatId]: updated\n      };\n    });\n\n    // Since there's no delete message endpoint in chat_views.py,\n    // this is a placeholder for future integration\n\n    setDeletePopup({\n      open: false,\n      msgIndex: null\n    });\n    setOpenMsgOptions(null);\n  };\n\n  // UI helper functions\n  const openImageModal = src => setModalImage(src);\n  const closeImageModal = () => setModalImage(null);\n  const openPdfModal = (src, fileName) => setPdfModal({\n    open: true,\n    src,\n    fileName\n  });\n  const closePdfModal = () => setPdfModal({\n    open: false,\n    src: '',\n    fileName: ''\n  });\n  const toggleMenu = () => setMenuOpen(prev => !prev);\n  const toggleMsgOptions = index => setOpenMsgOptions(prev => prev === index ? null : index);\n  const openDeletePopup = index => setDeletePopup({\n    open: true,\n    msgIndex: index\n  });\n  const handleDeletePopupClose = () => setDeletePopup({\n    open: false,\n    msgIndex: null\n  });\n  const handleReplyMessage = msg => {\n    setReplyMsg(msg);\n    setOpenMsgOptions(null);\n  };\n\n  // Close dropdowns if clicking outside\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setMenuOpen(false);\n      }\n      if (msgOptionsRef.current && !msgOptionsRef.current.contains(e.target)) {\n        setOpenMsgOptions(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // The rest of your component's JSX remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chats-left-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"back-link arrow-only\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chats-title\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-list\",\n          style: {\n            textAlign: 'center'\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-item\",\n            children: \"Loading chats...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this) : chatList.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-item\",\n            children: \"No chats found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this) : chatList.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChat === chat.id ? 'active' : ''}`,\n            onClick: () => setSelectedChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-link\",\n              children: chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-count\",\n              children: chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 21\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: selectedChat ? 'chats-right-panel doodle' : 'chats-right-panel',\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"chats-right-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-contact-name\",\n              children: (_chatList$find = chatList.find(chat => chat.id === selectedChat)) === null || _chatList$find === void 0 ? void 0 : _chatList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-actions\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEllipsisV,\n                className: \"ellipsis-icon\",\n                onClick: toggleMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-menu-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: () => {\n                    setMessages(prev => ({\n                      ...prev,\n                      [selectedChat]: []\n                    }));\n                    setMenuOpen(false);\n                  },\n                  children: \"Clear Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: () => {\n                    // Remove chat from chatList and messages\n                    setChatList(prev => prev.filter(c => c.id !== selectedChat));\n                    setMessages(prev => {\n                      const newMsgs = {\n                        ...prev\n                      };\n                      delete newMsgs[selectedChat];\n                      return newMsgs;\n                    });\n                    setSelectedChat(null);\n                    setMenuOpen(false);\n                  },\n                  children: \"Delete Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            ref: msgOptionsRef,\n            children: (messages[selectedChat] || []).map((msg, index) => {\n              const isMine = msg.user === 'Me';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message-wrapper ${isMine ? 'mine' : 'theirs'}`,\n                children: [isMine && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msg-options-container\",\n                  onClick: e => e.stopPropagation(),\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEllipsisH,\n                    className: \"msg-options-icon\",\n                    onClick: () => toggleMsgOptions(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 27\n                  }, this), openMsgOptions === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"msg-options-dropdown\",\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"msg-option-item\",\n                      onClick: () => handleReplyMessage(msg),\n                      children: \"Reply\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"msg-option-item\",\n                      onClick: () => openDeletePopup(index),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `message-bubble ${isMine ? 'mine' : 'theirs'}`,\n                  children: [msg.replyTo && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mini-reply-bubble\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mini-reply-sender\",\n                      children: msg.replyTo.user\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mini-reply-text\",\n                      children: msg.replyTo.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 27\n                  }, this), msg.type === 'deleted' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-text deleted\",\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faBan,\n                        className: \"deleted-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 31\n                      }, this), msg.message]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : msg.type === 'image' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: msg.src,\n                      alt: \"sent\",\n                      className: \"message-image\",\n                      onClick: () => openImageModal(msg.src)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : msg.type === 'pdf' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-preview\",\n                      onClick: () => openPdfModal(msg.src, msg.fileName),\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faFilePdf,\n                        className: \"pdf-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-filename\",\n                        children: msg.fileName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 624,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : msg.type === 'file' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: msg.src,\n                      download: msg.fileName,\n                      className: \"file-link\",\n                      title: \"Download File\",\n                      children: msg.fileName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-text\",\n                      children: msg.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 23\n                }, this), !isMine && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msg-options-container\",\n                  onClick: e => e.stopPropagation(),\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEllipsisH,\n                    className: \"msg-options-icon\",\n                    onClick: () => toggleMsgOptions(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 27\n                  }, this), openMsgOptions === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"msg-options-dropdown\",\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"msg-option-item\",\n                      onClick: () => handleReplyMessage(msg),\n                      children: \"Reply\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"msg-option-item\",\n                      onClick: () => openDeletePopup(index),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), replyMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reply-text\",\n              children: replyMsg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cancel-reply\",\n              onClick: () => setReplyMsg(null),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type a message...\",\n              value: typedMessage,\n              onChange: e => setTypedMessage(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') handleSend();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane,\n              className: \"send-icon\",\n              onClick: handleSend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              },\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              className: \"upload-icon\",\n              onClick: handleUploadClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-placeholder\",\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), deletePopup.open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-popup-modal\",\n      onClick: handleDeletePopupClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-popup-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Delete message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-popup-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-option\",\n            onClick: () => handleDeleteMessage(selectedChat, deletePopup.msgIndex, false),\n            children: \"Delete for me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-option\",\n            onClick: () => handleDeleteMessage(selectedChat, deletePopup.msgIndex, true),\n            children: \"Delete for all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 9\n    }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal\",\n      onClick: closeImageModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-modal-icon\",\n          onClick: closeImageModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          alt: \"Enlarged\",\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: modalImage,\n          download: \"image.png\",\n          className: \"download-link\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 9\n    }, this), pdfModal.open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-modal\",\n      onClick: closePdfModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-pdf-modal\",\n          onClick: closePdfModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"embed\", {\n          src: pdfModal.src,\n          type: \"application/pdf\",\n          className: \"pdf-embed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: pdfModal.src,\n          download: pdfModal.fileName,\n          className: \"download-pdf-icon\",\n          title: \"Download PDF\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatListPage, \"Zvi6Al6MsLRsN3Z4lqQNf8bbC68=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatListPage;\nexport default ChatListPage;\nvar _c;\n$RefreshReg$(_c, \"ChatListPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","useNavigate","FontAwesomeIcon","faArrowLeft","faEllipsisV","faEllipsisH","faDownload","faPaperclip","faPaperPlane","faFilePdf","faBan","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","ChatListPage","_s","_chatList$find","navigate","chatList","setChatList","selectedChat","setSelectedChat","messages","setMessages","typedMessage","setTypedMessage","replyMsg","setReplyMsg","isLoading","setIsLoading","userInfo","setUserInfo","fileInputRef","modalImage","setModalImage","pdfModal","setPdfModal","open","src","fileName","deletePopup","setDeletePopup","msgIndex","menuOpen","setMenuOpen","openMsgOptions","setOpenMsgOptions","menuRef","msgOptionsRef","getTimeStamp","Date","toLocaleTimeString","hour","minute","fetch","credentials","then","res","status","json","data","catch","err","console","error","fetchChats","response","fetchedChats","map","chat","_chat$last_message","id","toString","name","other_participant","username","lastMessage","last_message","text","unreadCount","unread_count","fetchMessages","formData","URLSearchParams","append","method","headers","body","transformedMessages","msg","isMine","sender_id","messageObj","user","sender_name","message","time","created_at","is_read","prev","markMessagesAsRead","chatId","handleSend","trim","newMessage","now","replyTo","ok","errorData","currentMessages","lastIndex","length","handleUploadClick","_fileInputRef$current","current","click","handleFileChange","e","file","target","files","fileType","type","toLowerCase","timeStamp","messageType","startsWith","endsWith","reader","FileReader","onload","newMsg","result","readAsDataURL","value","startNewChat","userId","some","_data$last_message","handleDeleteMessage","deleteForAll","updated","splice","originalMsg","undefined","openImageModal","closeImageModal","openPdfModal","closePdfModal","toggleMenu","toggleMsgOptions","index","openDeletePopup","handleDeletePopupClose","handleReplyMessage","handleClickOutside","contains","document","addEventListener","removeEventListener","className","children","to","icon","_jsxFileName","lineNumber","columnNumber","style","textAlign","onClick","find","ref","filter","c","newMsgs","stopPropagation","alt","href","download","title","placeholder","onChange","onKeyDown","key","accept","display","_c","$RefreshReg$"],"sources":["/home/anmol/DEShaw-Project/subspot/frontend/src/components/ChatListPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faArrowLeft,\n  faEllipsisV,\n  faEllipsisH,\n  faDownload,\n  faPaperclip,\n  faPaperPlane,\n  faFilePdf,\n  faBan,\n} from '@fortawesome/free-solid-svg-icons';\nimport './ChatListPage.css';\n\n// Update the API base URL to match the Dashboard.js pattern\nconst API_BASE_URL = 'http://localhost:8000/subspot/';\n\nconst ChatListPage = () => {\n  const navigate = useNavigate();\n  // Chat state\n  const [chatList, setChatList] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [typedMessage, setTypedMessage] = useState('');\n  const [replyMsg, setReplyMsg] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Modals / popups\n  const [modalImage, setModalImage] = useState(null);\n  const [pdfModal, setPdfModal] = useState({ open: false, src: '', fileName: '' });\n  const [deletePopup, setDeletePopup] = useState({ open: false, msgIndex: null });\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [openMsgOptions, setOpenMsgOptions] = useState(null);\n  const menuRef = useRef(null);\n  const msgOptionsRef = useRef(null);\n\n  const getTimeStamp = () =>\n    new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n  // Fetch user info like in Dashboard.js\n  useEffect(() => {\n    fetch(`${API_BASE_URL}auth/user/`, { credentials: 'include' })\n      .then((res) => {\n        if (res.status === 401) {\n          navigate('/');\n          return;\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          setUserInfo(data);\n        }\n      })\n      .catch((err) => console.error('Error fetching user info:', err));\n  }, [navigate]);\n\n  // Fetch chat list when component mounts - matches ChatListView in chat_views.py\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}chats/`, {\n          credentials: 'include',\n        });\n\n        if (response.status === 401) {\n          navigate('/');\n          return;\n        }\n\n        const data = await response.json();\n\n        // Transform the data to match the response from ChatListView\n        const fetchedChats = data.map((chat) => ({\n          id: chat.id.toString(),\n          name: chat.other_participant.username || `Chat #${chat.id}`,\n          lastMessage: chat.last_message?.text || '',\n          unreadCount: chat.unread_count || 0,\n        }));\n\n        setChatList(fetchedChats);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching chats:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchChats();\n  }, [navigate]);\n\n  // Fetch messages when a chat is selected - matches ChatDetailView in chat_views.py\n  useEffect(() => {\n    if (!selectedChat) return;\n\n    const fetchMessages = async () => {\n      try {\n        // Create URLSearchParams for POST request to match the ChatDetailView\n        const formData = new URLSearchParams();\n        formData.append('chat_id', selectedChat);\n\n        const response = await fetch(`${API_BASE_URL}chats/detail/`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: formData,\n        });\n\n        if (response.status === 401) {\n          navigate('/');\n          return;\n        }\n\n        const data = await response.json();\n\n        // Transform messages to match our component's structure\n        const transformedMessages = data.messages.map((msg) => {\n          // This is the critical line - check if the sender_id matches the current user's id\n          const isMine = msg.sender_id === userInfo?.id;\n\n          const messageObj = {\n            id: msg.id,\n            user: isMine ? 'Me' : msg.sender_name, // Use 'Me' for current user's messages\n            message: msg.text,\n            time: new Date(msg.created_at).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n            }),\n            is_read: msg.is_read,\n            sender_id: msg.sender_id // Keep sender_id for reference\n          };\n\n          return messageObj;\n        });\n\n        setMessages((prev) => ({\n          ...prev,\n          [selectedChat]: transformedMessages,\n        }));\n\n        // Mark messages as read when chat is selected\n        markMessagesAsRead(selectedChat);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    fetchMessages();\n  }, [selectedChat, navigate, userInfo]);\n\n  // Mark messages as read using MarkMessagesReadView\n  const markMessagesAsRead = async (chatId) => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append('chat_id', chatId);\n\n      await fetch(`${API_BASE_URL}messages/mark-read/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n      });\n\n      // Update the unreadCount in the chat list\n      setChatList((prev) =>\n        prev.map((chat) =>\n          chat.id === chatId ? { ...chat, unreadCount: 0 } : chat\n        )\n      );\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  // Send a message using MessageCreateView in chat_views.py\n  const handleSend = async () => {\n    if (!typedMessage.trim() || !selectedChat) return;\n\n    // Create new message object for UI\n    const newMessage = {\n      id: 'temp-' + Date.now(), // Temporary ID until server responds\n      user: 'Me',\n      message: typedMessage,\n      time: getTimeStamp(),\n      is_read: true, // Messages from the current user are always \"read\"\n    };\n\n    if (replyMsg) {\n      newMessage.replyTo = {\n        user: replyMsg.user || 'Them',\n        message: replyMsg.message,\n      };\n    }\n\n    // Optimistically update UI\n    setMessages((prev) => ({\n      ...prev,\n      [selectedChat]: [...(prev[selectedChat] || []), newMessage],\n    }));\n\n    try {\n      // Create form data for POST request to match MessageCreateView\n      const formData = new URLSearchParams();\n      formData.append('chat_id', selectedChat);\n      formData.append('text', typedMessage);\n      \n      // Add reply_to_id if user is replying to a message\n      if (replyMsg?.id) {\n        formData.append('reply_to_id', replyMsg.id);\n      }\n\n      // Send to REST API using MessageCreateView\n      const response = await fetch(`${API_BASE_URL}messages/create/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n      });\n\n      if (response.status === 401) {\n        navigate('/');\n        return;\n      }\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Error sending message:', errorData.error);\n        return;\n      }\n\n      const data = await response.json();\n      \n      // Update the message with the returned data\n      setMessages((prev) => {\n        const currentMessages = [...prev[selectedChat]];\n        const lastIndex = currentMessages.length - 1;\n        \n        // Update last message with ID from server and ensure it's marked as \"mine\"\n        currentMessages[lastIndex] = {\n          ...currentMessages[lastIndex],\n          id: data.id,\n          user: 'Me', // Explicitly set as \"Me\" to ensure it appears on right side\n          sender_id: userInfo?.id, // Store the sender ID to help with future comparisons\n        };\n        \n        return {\n          ...prev,\n          [selectedChat]: currentMessages,\n        };\n      });\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Reset input\n    setTypedMessage('');\n    setReplyMsg(null);\n  };\n\n  // File upload - since there's no direct file upload endpoint,\n  // this is a placeholder for integration with your file upload system\n  const handleUploadClick = () => {\n    if (!selectedChat) return;\n    fileInputRef.current?.click();\n  };\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file || !selectedChat) return;\n\n    const fileName = file.name;\n    const fileType = file.type.toLowerCase();\n    const timeStamp = getTimeStamp();\n\n    // Determine message type\n    let messageType = 'file';\n    if (fileType.startsWith('image/')) {\n      messageType = 'image';\n    } else if (\n      fileType === 'application/pdf' ||\n      fileName.toLowerCase().endsWith('.pdf')\n    ) {\n      messageType = 'pdf';\n    }\n\n    // Create message for optimistic UI update\n    const reader = new FileReader();\n    reader.onload = async () => {\n      let newMsg = { user: 'Me', time: timeStamp };\n      if (messageType === 'image') {\n        newMsg.type = 'image';\n        newMsg.src = reader.result;\n      } else if (messageType === 'pdf') {\n        newMsg.type = 'pdf';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      } else {\n        newMsg.type = 'file';\n        newMsg.src = reader.result;\n        newMsg.fileName = fileName;\n      }\n\n      // Update UI optimistically\n      setMessages((prev) => ({\n        ...prev,\n        [selectedChat]: [...(prev[selectedChat] || []), newMsg],\n      }));\n\n      // Since there's no direct file upload endpoint in chat_views.py,\n      // this is a placeholder for integration with your file upload system\n    };\n\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n\n  // Start a new chat with a user using StartChatView\n  const startNewChat = async (userId) => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append('user_id', userId);\n\n      const response = await fetch(`${API_BASE_URL}chats/start/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n      });\n\n      if (response.status === 401) {\n        navigate('/');\n        return;\n      }\n\n      const data = await response.json();\n\n      // Add to chat list and select the new chat\n      setChatList((prev) => {\n        if (!prev.some((chat) => chat.id === data.id.toString())) {\n          return [\n            ...prev,\n            {\n              id: data.id.toString(),\n              name: data.other_participant.username || `Chat #${data.id}`,\n              lastMessage: data.last_message?.text || '',\n              unreadCount: data.unread_count || 0,\n            },\n          ];\n        }\n        return prev;\n      });\n\n      setSelectedChat(data.id.toString());\n    } catch (error) {\n      console.error('Error starting new chat:', error);\n    }\n  };\n\n  // Delete message - since there's no API endpoint for deleting messages in chat_views.py,\n  // this is a placeholder for future integration\n  const handleDeleteMessage = async (\n    chatId,\n    msgIndex,\n    deleteForAll = false\n  ) => {\n    const message = messages[chatId][msgIndex];\n\n    // Optimistically update UI\n    setMessages((prev) => {\n      const updated = [...(prev[chatId] || [])];\n      if (!deleteForAll) {\n        updated.splice(msgIndex, 1);\n      } else {\n        const originalMsg = updated[msgIndex];\n        updated[msgIndex] = {\n          ...originalMsg,\n          type: 'deleted',\n          message: 'You deleted this message',\n          replyTo: undefined,\n          src: undefined,\n          fileName: undefined,\n        };\n      }\n      return { ...prev, [chatId]: updated };\n    });\n\n    // Since there's no delete message endpoint in chat_views.py,\n    // this is a placeholder for future integration\n\n    setDeletePopup({ open: false, msgIndex: null });\n    setOpenMsgOptions(null);\n  };\n\n  // UI helper functions\n  const openImageModal = (src) => setModalImage(src);\n  const closeImageModal = () => setModalImage(null);\n  const openPdfModal = (src, fileName) =>\n    setPdfModal({ open: true, src, fileName });\n  const closePdfModal = () =>\n    setPdfModal({ open: false, src: '', fileName: '' });\n  const toggleMenu = () => setMenuOpen((prev) => !prev);\n  const toggleMsgOptions = (index) =>\n    setOpenMsgOptions((prev) => (prev === index ? null : index));\n  const openDeletePopup = (index) =>\n    setDeletePopup({ open: true, msgIndex: index });\n  const handleDeletePopupClose = () =>\n    setDeletePopup({ open: false, msgIndex: null });\n\n  const handleReplyMessage = (msg) => {\n    setReplyMsg(msg);\n    setOpenMsgOptions(null);\n  };\n\n  // Close dropdowns if clicking outside\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setMenuOpen(false);\n      }\n      if (msgOptionsRef.current && !msgOptionsRef.current.contains(e.target)) {\n        setOpenMsgOptions(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () =>\n      document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // The rest of your component's JSX remains the same\n  return (\n    <div className=\"chats-container\">\n      <div className=\"chats-wrapper\">\n        {/* Left Panel */}\n        <div className=\"chats-left-panel\">\n          <header className=\"chats-left-header\">\n            <Link to=\"/dashboard\" className=\"back-link arrow-only\">\n              <FontAwesomeIcon icon={faArrowLeft} />\n            </Link>\n            <h2 className=\"chats-title\">Chat</h2>\n          </header>\n\n          <ul className=\"chat-list\" style={{ textAlign: 'center' }}>\n            {isLoading ? (\n              <li className=\"chat-item\">Loading chats...</li>\n            ) : chatList.length === 0 ? (\n              <li className=\"chat-item\">No chats found</li>\n            ) : (\n              chatList.map((chat) => (\n                <li\n                  key={chat.id}\n                  className={`chat-item ${\n                    selectedChat === chat.id ? 'active' : ''\n                  }`}\n                  onClick={() => setSelectedChat(chat.id)}\n                >\n                  <span className=\"chat-link\">{chat.name}</span>\n                  {chat.unreadCount > 0 && (\n                    <span className=\"unread-count\">{chat.unreadCount}</span>\n                  )}\n                </li>\n              ))\n            )}\n          </ul>\n        </div>\n\n        {/* Right Panel */}\n        <div\n          className={\n            selectedChat ? 'chats-right-panel doodle' : 'chats-right-panel'\n          }\n        >\n          {selectedChat ? (\n            <div className=\"chat-content\">\n              <header className=\"chats-right-header\">\n                <span className=\"chat-contact-name\">\n                  {chatList.find((chat) => chat.id === selectedChat)?.name}\n                </span>\n                <div className=\"chat-header-actions\" ref={menuRef}>\n                  <FontAwesomeIcon\n                    icon={faEllipsisV}\n                    className=\"ellipsis-icon\"\n                    onClick={toggleMenu}\n                  />\n                  {menuOpen && (\n                    <div className=\"chat-menu-dropdown\">\n                      <div\n                        className=\"dropdown-item\"\n                        onClick={() => {\n                          setMessages((prev) => ({\n                            ...prev,\n                            [selectedChat]: [],\n                          }));\n                          setMenuOpen(false);\n                        }}\n                      >\n                        Clear Chat\n                      </div>\n                      <div\n                        className=\"dropdown-item\"\n                        onClick={() => {\n                          // Remove chat from chatList and messages\n                          setChatList((prev) =>\n                            prev.filter((c) => c.id !== selectedChat)\n                          );\n                          setMessages((prev) => {\n                            const newMsgs = { ...prev };\n                            delete newMsgs[selectedChat];\n                            return newMsgs;\n                          });\n                          setSelectedChat(null);\n                          setMenuOpen(false);\n                        }}\n                      >\n                        Delete Chat\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </header>\n\n              <div className=\"chat-messages\" ref={msgOptionsRef}>\n                {(messages[selectedChat] || []).map((msg, index) => {\n                  const isMine = msg.user === 'Me';\n                  return (\n                    <div\n                      key={index}\n                      className={`message-wrapper ${\n                        isMine ? 'mine' : 'theirs'\n                      }`}\n                    >\n                      {isMine && (\n                        <div\n                          className=\"msg-options-container\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          <FontAwesomeIcon\n                            icon={faEllipsisH}\n                            className=\"msg-options-icon\"\n                            onClick={() => toggleMsgOptions(index)}\n                          />\n                          {openMsgOptions === index && (\n                            <div\n                              className=\"msg-options-dropdown\"\n                              onClick={(e) => e.stopPropagation()}\n                            >\n                              <div\n                                className=\"msg-option-item\"\n                                onClick={() => handleReplyMessage(msg)}\n                              >\n                                Reply\n                              </div>\n                              <div\n                                className=\"msg-option-item\"\n                                onClick={() => openDeletePopup(index)}\n                              >\n                                Delete\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n\n                      <div\n                        className={`message-bubble ${\n                          isMine ? 'mine' : 'theirs'\n                        }`}\n                      >\n                        {msg.replyTo && (\n                          <div className=\"mini-reply-bubble\">\n                            <span className=\"mini-reply-sender\">\n                              {msg.replyTo.user}\n                            </span>\n                            <span className=\"mini-reply-text\">\n                              {msg.replyTo.message}\n                            </span>\n                          </div>\n                        )}\n\n                        {msg.type === 'deleted' ? (\n                          <>\n                            <div className=\"message-text deleted\">\n                              <FontAwesomeIcon\n                                icon={faBan}\n                                className=\"deleted-icon\"\n                              />\n                              {msg.message}\n                            </div>\n                            <div className=\"message-time\">{msg.time}</div>\n                          </>\n                        ) : msg.type === 'image' ? (\n                          <>\n                            <img\n                              src={msg.src}\n                              alt=\"sent\"\n                              className=\"message-image\"\n                              onClick={() => openImageModal(msg.src)}\n                            />\n                            <div className=\"message-time\">{msg.time}</div>\n                          </>\n                        ) : msg.type === 'pdf' ? (\n                          <>\n                            <div\n                              className=\"pdf-preview\"\n                              onClick={() =>\n                                openPdfModal(msg.src, msg.fileName)\n                              }\n                            >\n                              <FontAwesomeIcon\n                                icon={faFilePdf}\n                                className=\"pdf-icon\"\n                              />\n                              <span className=\"pdf-filename\">\n                                {msg.fileName}\n                              </span>\n                            </div>\n                            <div className=\"message-time\">{msg.time}</div>\n                          </>\n                        ) : msg.type === 'file' ? (\n                          <>\n                            <a\n                              href={msg.src}\n                              download={msg.fileName}\n                              className=\"file-link\"\n                              title=\"Download File\"\n                            >\n                              {msg.fileName}\n                            </a>\n                            <div className=\"message-time\">{msg.time}</div>\n                          </>\n                        ) : (\n                          <>\n                            <div className=\"message-text\">{msg.message}</div>\n                            <div className=\"message-time\">{msg.time}</div>\n                          </>\n                        )}\n                      </div>\n\n                      {!isMine && (\n                        <div\n                          className=\"msg-options-container\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          <FontAwesomeIcon\n                            icon={faEllipsisH}\n                            className=\"msg-options-icon\"\n                            onClick={() => toggleMsgOptions(index)}\n                          />\n                          {openMsgOptions === index && (\n                            <div\n                              className=\"msg-options-dropdown\"\n                              onClick={(e) => e.stopPropagation()}\n                            >\n                              <div\n                                className=\"msg-option-item\"\n                                onClick={() => handleReplyMessage(msg)}\n                              >\n                                Reply\n                              </div>\n                              <div\n                                className=\"msg-option-item\"\n                                onClick={() => openDeletePopup(index)}\n                              >\n                                Delete\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n\n              {replyMsg && (\n                <div className=\"reply-bubble\">\n                  <span className=\"reply-text\">{replyMsg.message}</span>\n                  <span\n                    className=\"cancel-reply\"\n                    onClick={() => setReplyMsg(null)}\n                  >\n                    &times;\n                  </span>\n                </div>\n              )}\n\n              <div className=\"chats-input-area\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Type a message...\"\n                  value={typedMessage}\n                  onChange={(e) => setTypedMessage(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') handleSend();\n                  }}\n                />\n                <FontAwesomeIcon\n                  icon={faPaperPlane}\n                  className=\"send-icon\"\n                  onClick={handleSend}\n                />\n                <input\n                  type=\"file\"\n                  accept=\"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                  ref={fileInputRef}\n                  style={{ display: 'none' }}\n                  onChange={handleFileChange}\n                />\n                <FontAwesomeIcon\n                  icon={faPaperclip}\n                  className=\"upload-icon\"\n                  onClick={handleUploadClick}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"chat-placeholder\">Start Messaging</div>\n          )}\n        </div>\n      </div>\n\n      {deletePopup.open && (\n        <div\n          className=\"delete-popup-modal\"\n          onClick={handleDeletePopupClose}\n        >\n          <div\n            className=\"delete-popup-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <p>Delete message:</p>\n            <div className=\"delete-popup-options\">\n              <span\n                className=\"delete-option\"\n                onClick={() =>\n                  handleDeleteMessage(\n                    selectedChat,\n                    deletePopup.msgIndex,\n                    false\n                  )\n                }\n              >\n                Delete for me\n              </span>\n              <span\n                className=\"delete-option\"\n                onClick={() =>\n                  handleDeleteMessage(\n                    selectedChat,\n                    deletePopup.msgIndex,\n                    true\n                  )\n                }\n              >\n                Delete for all\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {modalImage && (\n        <div className=\"image-modal\" onClick={closeImageModal}>\n          <div\n            className=\"image-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <span\n              className=\"close-modal-icon\"\n              onClick={closeImageModal}\n            >\n              &times;\n            </span>\n            <img\n              src={modalImage}\n              alt=\"Enlarged\"\n              className=\"modal-image\"\n            />\n            <a\n              href={modalImage}\n              download=\"image.png\"\n              className=\"download-link\"\n            >\n              <FontAwesomeIcon icon={faDownload} />\n            </a>\n          </div>\n        </div>\n      )}\n\n      {pdfModal.open && (\n        <div className=\"pdf-modal\" onClick={closePdfModal}>\n          <div\n            className=\"pdf-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <span\n              className=\"close-pdf-modal\"\n              onClick={closePdfModal}\n            >\n              &times;\n            </span>\n            <embed\n              src={pdfModal.src}\n              type=\"application/pdf\"\n              className=\"pdf-embed\"\n            />\n            <a\n              href={pdfModal.src}\n              download={pdfModal.fileName}\n              className=\"download-pdf-icon\"\n              title=\"Download PDF\"\n            >\n              <FontAwesomeIcon icon={faDownload} />\n            </a>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}