{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTimes}from'@fortawesome/free-solid-svg-icons';import'./AddSubscription.css';// Updated CSS below\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AddSubscription(){const navigate=useNavigate();const[newSubscriptionName,setNewSubscriptionName]=useState('');const[newSubscriptionCost,setNewSubscriptionCost]=useState('');const[newSubscriptionReminder,setNewSubscriptionReminder]=useState('monthly');const[newSubscriptionSharable,setNewSubscriptionSharable]=useState(true);const[newSubscriptionAutoRenew,setNewSubscriptionAutoRenew]=useState(false);const API_BASE_URL='http://localhost:8000/subspot/';const handleAddSubscription=e=>{e.preventDefault();const newSubscription={name:newSubscriptionName,reminder:newSubscriptionReminder,cost:newSubscriptionCost,is_shareable:newSubscriptionSharable,is_autorenew:newSubscriptionAutoRenew};fetch(`${API_BASE_URL}subscriptions/`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newSubscription),credentials:'include'}).then(res=>res.json()).then(data=>{// After adding, navigate back to Dashboard or wherever needed\nnavigate('/dashboard');}).catch(err=>console.error('Error adding subscription:',err));};const handleClose=()=>{navigate('/dashboard');};return/*#__PURE__*/_jsxs(\"div\",{className:\"add-subscription-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Subscription\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:handleClose,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimes})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddSubscription,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Service Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter service name\",value:newSubscriptionName,onChange:e=>setNewSubscriptionName(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Cost:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter cost\",value:newSubscriptionCost,onChange:e=>setNewSubscriptionCost(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Billing Cycle:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionReminder,onChange:e=>setNewSubscriptionReminder(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quarterly\",children:\"Quarterly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yearly\",children:\"Yearly\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sharable:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionSharable?'yes':'no',onChange:e=>setNewSubscriptionSharable(e.target.value==='yes'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auto Renew:\"}),/*#__PURE__*/_jsxs(\"select\",{value:newSubscriptionAutoRenew?'yes':'no',onChange:e=>setNewSubscriptionAutoRenew(e.target.value==='yes'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",type:\"submit\",children:\"Add Subscription\"})]})]});}export default AddSubscription;","map":{"version":3,"names":["React","useState","useNavigate","FontAwesomeIcon","faTimes","jsx","_jsx","jsxs","_jsxs","AddSubscription","navigate","newSubscriptionName","setNewSubscriptionName","newSubscriptionCost","setNewSubscriptionCost","newSubscriptionReminder","setNewSubscriptionReminder","newSubscriptionSharable","setNewSubscriptionSharable","newSubscriptionAutoRenew","setNewSubscriptionAutoRenew","API_BASE_URL","handleAddSubscription","e","preventDefault","newSubscription","name","reminder","cost","is_shareable","is_autorenew","fetch","method","headers","body","JSON","stringify","credentials","then","res","json","data","catch","err","console","error","handleClose","className","children","onClick","icon","onSubmit","type","placeholder","value","onChange","target"],"sources":["/home/anmol/DEShaw-Project/subspot/frontend/src/components/AddSubscription.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './AddSubscription.css'; // Updated CSS below\n\nfunction AddSubscription() {\n  const navigate = useNavigate();\n  const [newSubscriptionName, setNewSubscriptionName] = useState('');\n  const [newSubscriptionCost, setNewSubscriptionCost] = useState('');\n  const [newSubscriptionReminder, setNewSubscriptionReminder] = useState('monthly');\n  const [newSubscriptionSharable, setNewSubscriptionSharable] = useState(true);\n  const [newSubscriptionAutoRenew, setNewSubscriptionAutoRenew] = useState(false);\n  \n  const API_BASE_URL = 'http://localhost:8000/subspot/';\n\n  const handleAddSubscription = (e) => {\n    e.preventDefault();\n    const newSubscription = {\n      name: newSubscriptionName,\n      reminder: newSubscriptionReminder,\n      cost: newSubscriptionCost,\n      is_shareable: newSubscriptionSharable,\n      is_autorenew: newSubscriptionAutoRenew,\n    };\n\n    fetch(`${API_BASE_URL}subscriptions/`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newSubscription),\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // After adding, navigate back to Dashboard or wherever needed\n        navigate('/dashboard');\n      })\n      .catch((err) => console.error('Error adding subscription:', err));\n  };\n\n  const handleClose = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"add-subscription-container\">\n      <div className=\"form-header\">\n        <h2>Add Subscription</h2>\n        <button className=\"close-button\" onClick={handleClose}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      <form onSubmit={handleAddSubscription}>\n        <div className=\"input-group\">\n          <label>Service Name:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter service name\"\n            value={newSubscriptionName}\n            onChange={(e) => setNewSubscriptionName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-group\">\n          <label>Cost:</label>\n          <input\n            type=\"number\"\n            placeholder=\"Enter cost\"\n            value={newSubscriptionCost}\n            onChange={(e) => setNewSubscriptionCost(e.target.value)}\n          />\n        </div>\n        <div className=\"input-group\">\n          <label>Billing Cycle:</label>\n          <select\n            value={newSubscriptionReminder}\n            onChange={(e) => setNewSubscriptionReminder(e.target.value)}\n          >\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"quarterly\">Quarterly</option>\n            <option value=\"yearly\">Yearly</option>\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label>Sharable:</label>\n          <select\n            value={newSubscriptionSharable ? 'yes' : 'no'}\n            onChange={(e) => setNewSubscriptionSharable(e.target.value === 'yes')}\n          >\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label>Auto Renew:</label>\n          <select\n            value={newSubscriptionAutoRenew ? 'yes' : 'no'}\n            onChange={(e) => setNewSubscriptionAutoRenew(e.target.value === 'yes')}\n          >\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n        </div>\n        <button className=\"submit-button\" type=\"submit\">Add Subscription</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddSubscription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}