{"ast":null,"code":"var _jsxFileName = \"D:\\\\DESIS ASCEND Educare Program Edition 4 (2024)\\\\Desis Project\\\\subspot\\\\frontend\\\\src\\\\components\\\\ChatListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faEllipsisV, faDownload, faPaperclip, faTelegramPlane, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport './ChatListPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialChats = [{\n  id: 1,\n  name: 'Friend 1'\n}, {\n  id: 2,\n  name: 'Friend 2'\n}, {\n  id: 3,\n  name: 'Seller 1'\n}];\nconst ChatListPage = () => {\n  _s();\n  var _chatList$find, _messages$selectedCha;\n  // Store chat list in state so we can delete a chat\n  const [chatList, setChatList] = useState(initialChats);\n\n  // Track which chat is selected\n  const [selectedChat, setSelectedChat] = useState(null);\n\n  // Example messages (with timestamps, stored by chat ID)\n  const [messages, setMessages] = useState({\n    1: [{\n      sender: 'theirs',\n      text: 'Hello!',\n      time: '10:00 AM',\n      type: 'text'\n    }, {\n      sender: 'mine',\n      text: 'Hi there!',\n      time: '10:01 AM',\n      type: 'text'\n    }],\n    2: [],\n    3: []\n  });\n\n  // Track what the user is typing\n  const [typedMessage, setTypedMessage] = useState('');\n\n  // For file uploads (images, docs, pdf, etc.)\n  const fileInputRef = useRef(null);\n\n  // For image modal (zoomed image)\n  const [modalImage, setModalImage] = useState(null);\n\n  // For PDF modal (previewing a PDF)\n  const [pdfModal, setPdfModal] = useState({\n    open: false,\n    src: '',\n    fileName: ''\n  });\n\n  // For the 3-dot menu\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Generate a timestamp (e.g., 10:02 AM)\n  const getTimeStamp = () => {\n    return new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Handle selecting a chat\n  const handleSelectChat = chatId => {\n    setSelectedChat(chatId);\n    setTypedMessage('');\n    setMenuOpen(false); // close menu if switching chats\n  };\n\n  // Handle sending a text message\n  const handleSend = () => {\n    if (!typedMessage.trim() || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: [...(prev[selectedChat] || []), {\n        sender: 'mine',\n        text: typedMessage,\n        time: timeStamp,\n        type: 'text'\n      }]\n    }));\n    setTypedMessage('');\n  };\n\n  // Handle clicking the \"Upload\" icon\n  const handleUploadClick = () => {\n    if (!selectedChat) return;\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle when a file is selected\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file || !selectedChat) return;\n    const timeStamp = getTimeStamp();\n    const fileName = file.name;\n    const fileType = file.type.toLowerCase();\n    const reader = new FileReader();\n    reader.onload = () => {\n      // If it's an image (png, jpg, gif, etc.)\n      if (fileType.startsWith('image/')) {\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: [...(prev[selectedChat] || []), {\n            sender: 'mine',\n            src: reader.result,\n            // base64 data URL\n            time: timeStamp,\n            type: 'image'\n          }]\n        }));\n      }\n      // If it's a PDF\n      else if (fileType === 'application/pdf' || fileName.toLowerCase().endsWith('.pdf')) {\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: [...(prev[selectedChat] || []), {\n            sender: 'mine',\n            src: reader.result,\n            // base64 data URL\n            time: timeStamp,\n            type: 'pdf',\n            fileName: fileName\n          }]\n        }));\n      }\n      // Otherwise, treat it as a general file\n      else {\n        setMessages(prev => ({\n          ...prev,\n          [selectedChat]: [...(prev[selectedChat] || []), {\n            sender: 'mine',\n            src: reader.result,\n            // base64 data URL\n            time: timeStamp,\n            type: 'file',\n            fileName: fileName // store the file name\n          }]\n        }));\n      }\n    };\n    reader.readAsDataURL(file);\n\n    // Reset file input so the same file can be re-selected if desired\n    e.target.value = '';\n  };\n\n  // Open image modal with a larger view\n  const openImageModal = src => {\n    setModalImage(src);\n  };\n\n  // Close image modal\n  const closeImageModal = () => {\n    setModalImage(null);\n  };\n\n  // Open PDF modal\n  const openPdfModal = (src, fileName) => {\n    setPdfModal({\n      open: true,\n      src,\n      fileName\n    });\n  };\n\n  // Close PDF modal\n  const closePdfModal = () => {\n    setPdfModal({\n      open: false,\n      src: '',\n      fileName: ''\n    });\n  };\n\n  // Clear all messages in the selected chat\n  const handleClearChat = () => {\n    if (!selectedChat) return;\n    setMessages(prev => ({\n      ...prev,\n      [selectedChat]: []\n    }));\n    setMenuOpen(false);\n  };\n\n  // Delete the selected chat entirely\n  const handleDeleteChat = () => {\n    if (!selectedChat) return;\n    // Remove from chatList\n    setChatList(prevList => prevList.filter(chat => chat.id !== selectedChat));\n    // Remove messages\n    setMessages(prev => {\n      const newMessages = {\n        ...prev\n      };\n      delete newMessages[selectedChat];\n      return newMessages;\n    });\n    // Deselect chat\n    setSelectedChat(null);\n    setMenuOpen(false);\n  };\n\n  // Toggle the 3-dot menu\n  const toggleMenu = () => {\n    setMenuOpen(prev => !prev);\n  };\n\n  // Close the menu if clicked outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chats-left-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"back-link arrow-only\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chats-title\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-list\",\n          children: chatList.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat-item ${selectedChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleSelectChat(chat.id),\n            children: chat.name\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-right-panel\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"chats-right-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-contact-name\",\n              children: (_chatList$find = chatList.find(chat => chat.id === selectedChat)) === null || _chatList$find === void 0 ? void 0 : _chatList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-actions\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEllipsisV,\n                className: \"ellipsis-icon\",\n                onClick: toggleMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-menu-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleClearChat,\n                  children: \"Clear Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-item\",\n                  onClick: handleDeleteChat,\n                  children: \"Delete Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: (_messages$selectedCha = messages[selectedChat]) === null || _messages$selectedCha === void 0 ? void 0 : _messages$selectedCha.map((msg, index) => {\n              switch (msg.type) {\n                case 'text':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-text\",\n                      children: msg.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this);\n                case 'image':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: msg.src,\n                      alt: \"sent\",\n                      className: \"message-image\",\n                      onClick: () => openImageModal(msg.src)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this);\n                case 'pdf':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-preview\",\n                      onClick: () => openPdfModal(msg.src, msg.fileName),\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faFilePdf,\n                        className: \"pdf-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-filename\",\n                        children: msg.fileName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this);\n                case 'file':\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message-bubble ${msg.sender}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: msg.src,\n                      download: msg.fileName,\n                      className: \"file-link\",\n                      title: \"Download File\",\n                      children: msg.fileName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-time\",\n                      children: msg.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this);\n                default:\n                  return null;\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type a message...\",\n              value: typedMessage,\n              onChange: e => setTypedMessage(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') handleSend();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTelegramPlane,\n              className: \"send-icon\",\n              onClick: handleSend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              },\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              className: \"upload-icon\",\n              onClick: handleUploadClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        /* Centered placeholder message */\n        _jsxDEV(\"div\", {\n          className: \"chat-placeholder\",\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal\",\n      onClick: closeImageModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-modal-icon\",\n          onClick: closeImageModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          alt: \"Enlarged\",\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: modalImage,\n          download: \"image.png\",\n          className: \"download-link\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), pdfModal.open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-modal\",\n      onClick: closePdfModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-pdf-modal\",\n          onClick: closePdfModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"embed\", {\n          src: pdfModal.src,\n          type: \"application/pdf\",\n          className: \"pdf-embed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: pdfModal.src,\n          download: pdfModal.fileName,\n          className: \"download-pdf-icon\",\n          title: \"Download PDF\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatListPage, \"TFh9UTShawiSFJklCxUhvCfuhGo=\");\n_c = ChatListPage;\nexport default ChatListPage;\nvar _c;\n$RefreshReg$(_c, \"ChatListPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","FontAwesomeIcon","faArrowLeft","faEllipsisV","faDownload","faPaperclip","faTelegramPlane","faFilePdf","jsxDEV","_jsxDEV","initialChats","id","name","ChatListPage","_s","_chatList$find","_messages$selectedCha","chatList","setChatList","selectedChat","setSelectedChat","messages","setMessages","sender","text","time","type","typedMessage","setTypedMessage","fileInputRef","modalImage","setModalImage","pdfModal","setPdfModal","open","src","fileName","menuOpen","setMenuOpen","menuRef","getTimeStamp","Date","toLocaleTimeString","hour","minute","handleSelectChat","chatId","handleSend","trim","timeStamp","prev","handleUploadClick","current","click","handleFileChange","e","file","target","files","fileType","toLowerCase","reader","FileReader","onload","startsWith","result","endsWith","readAsDataURL","value","openImageModal","closeImageModal","openPdfModal","closePdfModal","handleClearChat","handleDeleteChat","prevList","filter","chat","newMessages","toggleMenu","handleClickOutside","event","contains","document","addEventListener","removeEventListener","className","children","to","icon","_jsxFileName","lineNumber","columnNumber","map","onClick","find","ref","msg","index","alt","href","download","title","placeholder","onChange","onKeyDown","key","accept","style","display","stopPropagation","_c","$RefreshReg$"],"sources":["D:/DESIS ASCEND Educare Program Edition 4 (2024)/Desis Project/subspot/frontend/src/components/ChatListPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowLeft,\r\n  faEllipsisV,\r\n  faDownload,\r\n  faPaperclip,\r\n  faTelegramPlane,\r\n  faFilePdf,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './ChatListPage.css';\r\n\r\nconst initialChats = [\r\n  { id: 1, name: 'Friend 1' },\r\n  { id: 2, name: 'Friend 2' },\r\n  { id: 3, name: 'Seller 1' },\r\n];\r\n\r\nconst ChatListPage = () => {\r\n  // Store chat list in state so we can delete a chat\r\n  const [chatList, setChatList] = useState(initialChats);\r\n\r\n  // Track which chat is selected\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n\r\n  // Example messages (with timestamps, stored by chat ID)\r\n  const [messages, setMessages] = useState({\r\n    1: [\r\n      { sender: 'theirs', text: 'Hello!', time: '10:00 AM', type: 'text' },\r\n      { sender: 'mine', text: 'Hi there!', time: '10:01 AM', type: 'text' },\r\n    ],\r\n    2: [],\r\n    3: [],\r\n  });\r\n\r\n  // Track what the user is typing\r\n  const [typedMessage, setTypedMessage] = useState('');\r\n\r\n  // For file uploads (images, docs, pdf, etc.)\r\n  const fileInputRef = useRef(null);\r\n\r\n  // For image modal (zoomed image)\r\n  const [modalImage, setModalImage] = useState(null);\r\n\r\n  // For PDF modal (previewing a PDF)\r\n  const [pdfModal, setPdfModal] = useState({ open: false, src: '', fileName: '' });\r\n\r\n  // For the 3-dot menu\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n  // Generate a timestamp (e.g., 10:02 AM)\r\n  const getTimeStamp = () => {\r\n    return new Date().toLocaleTimeString([], {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  // Handle selecting a chat\r\n  const handleSelectChat = (chatId) => {\r\n    setSelectedChat(chatId);\r\n    setTypedMessage('');\r\n    setMenuOpen(false); // close menu if switching chats\r\n  };\r\n\r\n  // Handle sending a text message\r\n  const handleSend = () => {\r\n    if (!typedMessage.trim() || !selectedChat) return;\r\n    const timeStamp = getTimeStamp();\r\n\r\n    setMessages((prev) => ({\r\n      ...prev,\r\n      [selectedChat]: [\r\n        ...(prev[selectedChat] || []),\r\n        {\r\n          sender: 'mine',\r\n          text: typedMessage,\r\n          time: timeStamp,\r\n          type: 'text',\r\n        },\r\n      ],\r\n    }));\r\n\r\n    setTypedMessage('');\r\n  };\r\n\r\n  // Handle clicking the \"Upload\" icon\r\n  const handleUploadClick = () => {\r\n    if (!selectedChat) return;\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // Handle when a file is selected\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file || !selectedChat) return;\r\n\r\n    const timeStamp = getTimeStamp();\r\n    const fileName = file.name;\r\n    const fileType = file.type.toLowerCase();\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      // If it's an image (png, jpg, gif, etc.)\r\n      if (fileType.startsWith('image/')) {\r\n        setMessages((prev) => ({\r\n          ...prev,\r\n          [selectedChat]: [\r\n            ...(prev[selectedChat] || []),\r\n            {\r\n              sender: 'mine',\r\n              src: reader.result, // base64 data URL\r\n              time: timeStamp,\r\n              type: 'image',\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n      // If it's a PDF\r\n      else if (fileType === 'application/pdf' || fileName.toLowerCase().endsWith('.pdf')) {\r\n        setMessages((prev) => ({\r\n          ...prev,\r\n          [selectedChat]: [\r\n            ...(prev[selectedChat] || []),\r\n            {\r\n              sender: 'mine',\r\n              src: reader.result, // base64 data URL\r\n              time: timeStamp,\r\n              type: 'pdf',\r\n              fileName: fileName,\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n      // Otherwise, treat it as a general file\r\n      else {\r\n        setMessages((prev) => ({\r\n          ...prev,\r\n          [selectedChat]: [\r\n            ...(prev[selectedChat] || []),\r\n            {\r\n              sender: 'mine',\r\n              src: reader.result,  // base64 data URL\r\n              time: timeStamp,\r\n              type: 'file',\r\n              fileName: fileName,  // store the file name\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n\r\n    // Reset file input so the same file can be re-selected if desired\r\n    e.target.value = '';\r\n  };\r\n\r\n  // Open image modal with a larger view\r\n  const openImageModal = (src) => {\r\n    setModalImage(src);\r\n  };\r\n\r\n  // Close image modal\r\n  const closeImageModal = () => {\r\n    setModalImage(null);\r\n  };\r\n\r\n  // Open PDF modal\r\n  const openPdfModal = (src, fileName) => {\r\n    setPdfModal({ open: true, src, fileName });\r\n  };\r\n\r\n  // Close PDF modal\r\n  const closePdfModal = () => {\r\n    setPdfModal({ open: false, src: '', fileName: '' });\r\n  };\r\n\r\n  // Clear all messages in the selected chat\r\n  const handleClearChat = () => {\r\n    if (!selectedChat) return;\r\n    setMessages((prev) => ({\r\n      ...prev,\r\n      [selectedChat]: [],\r\n    }));\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Delete the selected chat entirely\r\n  const handleDeleteChat = () => {\r\n    if (!selectedChat) return;\r\n    // Remove from chatList\r\n    setChatList((prevList) => prevList.filter((chat) => chat.id !== selectedChat));\r\n    // Remove messages\r\n    setMessages((prev) => {\r\n      const newMessages = { ...prev };\r\n      delete newMessages[selectedChat];\r\n      return newMessages;\r\n    });\r\n    // Deselect chat\r\n    setSelectedChat(null);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // Toggle the 3-dot menu\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prev) => !prev);\r\n  };\r\n\r\n  // Close the menu if clicked outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chats-container\">\r\n      <div className=\"chats-wrapper\">\r\n        {/* Left Panel: Chat List */}\r\n        <div className=\"chats-left-panel\">\r\n          <header className=\"chats-left-header\">\r\n            {/* Arrow-only back button in the top-left corner */}\r\n            <Link to=\"/dashboard\" className=\"back-link arrow-only\">\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </Link>\r\n            {/* Centered title */}\r\n            <h2 className=\"chats-title\">Chat</h2>\r\n          </header>\r\n\r\n          <ul className=\"chat-list\">\r\n            {chatList.map((chat) => (\r\n              <li\r\n                key={chat.id}\r\n                className={`chat-item ${selectedChat === chat.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectChat(chat.id)}\r\n              >\r\n                {chat.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Right Panel: Chat Messages */}\r\n        <div className=\"chats-right-panel\">\r\n          {selectedChat ? (\r\n            <div className=\"chat-content\">\r\n              <header className=\"chats-right-header\">\r\n                <span className=\"chat-contact-name\">\r\n                  {chatList.find((chat) => chat.id === selectedChat)?.name}\r\n                </span>\r\n                <div className=\"chat-header-actions\" ref={menuRef}>\r\n                  <FontAwesomeIcon\r\n                    icon={faEllipsisV}\r\n                    className=\"ellipsis-icon\"\r\n                    onClick={toggleMenu}\r\n                  />\r\n                  {menuOpen && (\r\n                    <div className=\"chat-menu-dropdown\">\r\n                      <div className=\"dropdown-item\" onClick={handleClearChat}>\r\n                        Clear Chat\r\n                      </div>\r\n                      <div className=\"dropdown-item\" onClick={handleDeleteChat}>\r\n                        Delete Chat\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </header>\r\n              <div className=\"chat-messages\">\r\n                {/* Render messages for the selected chat */}\r\n                {messages[selectedChat]?.map((msg, index) => {\r\n                  switch (msg.type) {\r\n                    case 'text':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          <div className=\"message-text\">{msg.text}</div>\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    case 'image':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          <img\r\n                            src={msg.src}\r\n                            alt=\"sent\"\r\n                            className=\"message-image\"\r\n                            onClick={() => openImageModal(msg.src)}\r\n                          />\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    case 'pdf':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          {/* Small PDF preview: an icon + file name */}\r\n                          <div\r\n                            className=\"pdf-preview\"\r\n                            onClick={() => openPdfModal(msg.src, msg.fileName)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faFilePdf} className=\"pdf-icon\" />\r\n                            <span className=\"pdf-filename\">{msg.fileName}</span>\r\n                          </div>\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    case 'file':\r\n                      return (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                          {/* Download link with file name */}\r\n                          <a\r\n                            href={msg.src}\r\n                            download={msg.fileName}\r\n                            className=\"file-link\"\r\n                            title=\"Download File\"\r\n                          >\r\n                            {msg.fileName}\r\n                          </a>\r\n                          <div className=\"message-time\">{msg.time}</div>\r\n                        </div>\r\n                      );\r\n                    default:\r\n                      return null;\r\n                  }\r\n                })}\r\n              </div>\r\n              <div className=\"chats-input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type a message...\"\r\n                  value={typedMessage}\r\n                  onChange={(e) => setTypedMessage(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') handleSend();\r\n                  }}\r\n                />\r\n                {/* Instagram-like send icon (faTelegramPlane) */}\r\n                <FontAwesomeIcon\r\n                  icon={faTelegramPlane}\r\n                  className=\"send-icon\"\r\n                  onClick={handleSend}\r\n                />\r\n                {/* Hidden file input for any upload */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*,.pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: 'none' }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                {/* Paperclip icon for upload */}\r\n                <FontAwesomeIcon\r\n                  icon={faPaperclip}\r\n                  className=\"upload-icon\"\r\n                  onClick={handleUploadClick}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            /* Centered placeholder message */\r\n            <div className=\"chat-placeholder\">Start Messaging</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Modal for enlarged preview */}\r\n      {modalImage && (\r\n        <div className=\"image-modal\" onClick={closeImageModal}>\r\n          <div className=\"image-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            {/* Close icon in the top-right corner */}\r\n            <span className=\"close-modal-icon\" onClick={closeImageModal}>\r\n              &times;\r\n            </span>\r\n            <img src={modalImage} alt=\"Enlarged\" className=\"modal-image\" />\r\n            {/* Download icon link (force download attribute) */}\r\n            <a href={modalImage} download=\"image.png\" className=\"download-link\">\r\n              <FontAwesomeIcon icon={faDownload} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* PDF Modal for previewing PDFs */}\r\n      {pdfModal.open && (\r\n        <div className=\"pdf-modal\" onClick={closePdfModal}>\r\n          <div className=\"pdf-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            {/* Close icon */}\r\n            <span className=\"close-pdf-modal\" onClick={closePdfModal}>\r\n              &times;\r\n            </span>\r\n            {/* Embedded PDF (base64 data URL) */}\r\n            <embed\r\n              src={pdfModal.src}\r\n              type=\"application/pdf\"\r\n              className=\"pdf-embed\"\r\n            />\r\n            {/* Download icon link */}\r\n            <a\r\n              href={pdfModal.src}\r\n              download={pdfModal.fileName}\r\n              className=\"download-pdf-icon\"\r\n              title=\"Download PDF\"\r\n            >\r\n              <FontAwesomeIcon icon={faDownload} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,eAAe,EACfC,SAAS,QACJ,mCAAmC;AAC1C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,CAC5B;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,qBAAA;EACzB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAACa,YAAY,CAAC;;EAEtD;EACA,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IACvC,CAAC,EAAE,CACD;MAAE0B,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAO,CAAC,EACpE;MAAEH,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAO,CAAC,CACtE;IACD,CAAC,EAAE,EAAE;IACL,CAAC,EAAE;EACL,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMgC,YAAY,GAAG/B,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC;IAAEqC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;;EAEhF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM0C,OAAO,GAAGzC,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACA,MAAM0C,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;MACvCC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC1B,eAAe,CAAC0B,MAAM,CAAC;IACvBlB,eAAe,CAAC,EAAE,CAAC;IACnBU,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACpB,YAAY,CAACqB,IAAI,CAAC,CAAC,IAAI,CAAC7B,YAAY,EAAE;IAC3C,MAAM8B,SAAS,GAAGT,YAAY,CAAC,CAAC;IAEhClB,WAAW,CAAE4B,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAAC/B,YAAY,GAAG,CACd,IAAI+B,IAAI,CAAC/B,YAAY,CAAC,IAAI,EAAE,CAAC,EAC7B;QACEI,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEG,YAAY;QAClBF,IAAI,EAAEwB,SAAS;QACfvB,IAAI,EAAE;MACR,CAAC;IAEL,CAAC,CAAC,CAAC;IAEHE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;;EAED;EACA,MAAMuB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAAChC,YAAY,EAAE;IACnB,IAAIU,YAAY,CAACuB,OAAO,EAAE;MACxBvB,YAAY,CAACuB,OAAO,CAACC,KAAK,CAAC,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,IAAI,CAACrC,YAAY,EAAE;IAE5B,MAAM8B,SAAS,GAAGT,YAAY,CAAC,CAAC;IAChC,MAAMJ,QAAQ,GAAGoB,IAAI,CAAC5C,IAAI;IAC1B,MAAM+C,QAAQ,GAAGH,IAAI,CAAC9B,IAAI,CAACkC,WAAW,CAAC,CAAC;IAExC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpB;MACA,IAAIJ,QAAQ,CAACK,UAAU,CAAC,QAAQ,CAAC,EAAE;QACjC1C,WAAW,CAAE4B,IAAI,KAAM;UACrB,GAAGA,IAAI;UACP,CAAC/B,YAAY,GAAG,CACd,IAAI+B,IAAI,CAAC/B,YAAY,CAAC,IAAI,EAAE,CAAC,EAC7B;YACEI,MAAM,EAAE,MAAM;YACdY,GAAG,EAAE0B,MAAM,CAACI,MAAM;YAAE;YACpBxC,IAAI,EAAEwB,SAAS;YACfvB,IAAI,EAAE;UACR,CAAC;QAEL,CAAC,CAAC,CAAC;MACL;MACA;MAAA,KACK,IAAIiC,QAAQ,KAAK,iBAAiB,IAAIvB,QAAQ,CAACwB,WAAW,CAAC,CAAC,CAACM,QAAQ,CAAC,MAAM,CAAC,EAAE;QAClF5C,WAAW,CAAE4B,IAAI,KAAM;UACrB,GAAGA,IAAI;UACP,CAAC/B,YAAY,GAAG,CACd,IAAI+B,IAAI,CAAC/B,YAAY,CAAC,IAAI,EAAE,CAAC,EAC7B;YACEI,MAAM,EAAE,MAAM;YACdY,GAAG,EAAE0B,MAAM,CAACI,MAAM;YAAE;YACpBxC,IAAI,EAAEwB,SAAS;YACfvB,IAAI,EAAE,KAAK;YACXU,QAAQ,EAAEA;UACZ,CAAC;QAEL,CAAC,CAAC,CAAC;MACL;MACA;MAAA,KACK;QACHd,WAAW,CAAE4B,IAAI,KAAM;UACrB,GAAGA,IAAI;UACP,CAAC/B,YAAY,GAAG,CACd,IAAI+B,IAAI,CAAC/B,YAAY,CAAC,IAAI,EAAE,CAAC,EAC7B;YACEI,MAAM,EAAE,MAAM;YACdY,GAAG,EAAE0B,MAAM,CAACI,MAAM;YAAG;YACrBxC,IAAI,EAAEwB,SAAS;YACfvB,IAAI,EAAE,MAAM;YACZU,QAAQ,EAAEA,QAAQ,CAAG;UACvB,CAAC;QAEL,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IACDyB,MAAM,CAACM,aAAa,CAACX,IAAI,CAAC;;IAE1B;IACAD,CAAC,CAACE,MAAM,CAACW,KAAK,GAAG,EAAE;EACrB,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIlC,GAAG,IAAK;IAC9BJ,aAAa,CAACI,GAAG,CAAC;EACpB,CAAC;;EAED;EACA,MAAMmC,eAAe,GAAGA,CAAA,KAAM;IAC5BvC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMwC,YAAY,GAAGA,CAACpC,GAAG,EAAEC,QAAQ,KAAK;IACtCH,WAAW,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,GAAG;MAAEC;IAAS,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMoC,aAAa,GAAGA,CAAA,KAAM;IAC1BvC,WAAW,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMqC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACtD,YAAY,EAAE;IACnBG,WAAW,CAAE4B,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAAC/B,YAAY,GAAG;IAClB,CAAC,CAAC,CAAC;IACHmB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;;EAED;EACA,MAAMoC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACvD,YAAY,EAAE;IACnB;IACAD,WAAW,CAAEyD,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAClE,EAAE,KAAKQ,YAAY,CAAC,CAAC;IAC9E;IACAG,WAAW,CAAE4B,IAAI,IAAK;MACpB,MAAM4B,WAAW,GAAG;QAAE,GAAG5B;MAAK,CAAC;MAC/B,OAAO4B,WAAW,CAAC3D,YAAY,CAAC;MAChC,OAAO2D,WAAW;IACpB,CAAC,CAAC;IACF;IACA1D,eAAe,CAAC,IAAI,CAAC;IACrBkB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;;EAED;EACA,MAAMyC,UAAU,GAAGA,CAAA,KAAM;IACvBzC,WAAW,CAAEY,IAAI,IAAK,CAACA,IAAI,CAAC;EAC9B,CAAC;;EAED;EACAnD,SAAS,CAAC,MAAM;IACd,MAAMiF,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAI1C,OAAO,CAACa,OAAO,IAAI,CAACb,OAAO,CAACa,OAAO,CAAC8B,QAAQ,CAACD,KAAK,CAACxB,MAAM,CAAC,EAAE;QAC9DnB,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC;IACD6C,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvE,OAAA;IAAK6E,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B9E,OAAA;MAAK6E,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAE5B9E,OAAA;QAAK6E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B9E,OAAA;UAAQ6E,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAEnC9E,OAAA,CAACT,IAAI;YAACwF,EAAE,EAAC,YAAY;YAACF,SAAS,EAAC,sBAAsB;YAAAC,QAAA,eACpD9E,OAAA,CAACR,eAAe;cAACwF,IAAI,EAAEvF;YAAY;cAAAkC,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAxD,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eAEPnF,OAAA;YAAI6E,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAI;YAAAnD,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAxD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eAETnF,OAAA;UAAI6E,SAAS,EAAC,WAAW;UAAAC,QAAA,EACtBtE,QAAQ,CAAC4E,GAAG,CAAEhB,IAAI,iBACjBpE,OAAA;YAEE6E,SAAS,EAAE,aAAanE,YAAY,KAAK0D,IAAI,CAAClE,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;YACnEmF,OAAO,EAAEA,CAAA,KAAMjD,gBAAgB,CAACgC,IAAI,CAAClE,EAAE,CAAE;YAAA4E,QAAA,EAExCV,IAAI,CAACjE;UAAI,GAJLiE,IAAI,CAAClE,EAAE;YAAAyB,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACL;QAAC;UAAAxD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAxD,QAAA,EAAAsD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGNnF,OAAA;QAAK6E,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BpE,YAAY,gBACXV,OAAA;UAAK6E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B9E,OAAA;YAAQ6E,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACpC9E,OAAA;cAAM6E,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAAAxE,cAAA,GAChCE,QAAQ,CAAC8E,IAAI,CAAElB,IAAI,IAAKA,IAAI,CAAClE,EAAE,KAAKQ,YAAY,CAAC,cAAAJ,cAAA,uBAAjDA,cAAA,CAAmDH;YAAI;cAAAwB,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACPnF,OAAA;cAAK6E,SAAS,EAAC,qBAAqB;cAACU,GAAG,EAAEzD,OAAQ;cAAAgD,QAAA,gBAChD9E,OAAA,CAACR,eAAe;gBACdwF,IAAI,EAAEtF,WAAY;gBAClBmF,SAAS,EAAC,eAAe;gBACzBQ,OAAO,EAAEf;cAAW;gBAAA3C,QAAA,EAAAsD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC,EACDvD,QAAQ,iBACP5B,OAAA;gBAAK6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjC9E,OAAA;kBAAK6E,SAAS,EAAC,eAAe;kBAACQ,OAAO,EAAErB,eAAgB;kBAAAc,QAAA,EAAC;gBAEzD;kBAAAnD,QAAA,EAAAsD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNnF,OAAA;kBAAK6E,SAAS,EAAC,eAAe;kBAACQ,OAAO,EAAEpB,gBAAiB;kBAAAa,QAAA,EAAC;gBAE1D;kBAAAnD,QAAA,EAAAsD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAxD,QAAA,EAAAsD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA;cAAAxD,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAxD,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACTnF,OAAA;YAAK6E,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAAvE,qBAAA,GAE3BK,QAAQ,CAACF,YAAY,CAAC,cAAAH,qBAAA,uBAAtBA,qBAAA,CAAwB6E,GAAG,CAAC,CAACI,GAAG,EAAEC,KAAK,KAAK;cAC3C,QAAQD,GAAG,CAACvE,IAAI;gBACd,KAAK,MAAM;kBACT,oBACEjB,OAAA;oBAAiB6E,SAAS,EAAE,kBAAkBW,GAAG,CAAC1E,MAAM,EAAG;oBAAAgE,QAAA,gBACzD9E,OAAA;sBAAK6E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEU,GAAG,CAACzE;oBAAI;sBAAAY,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC9CnF,OAAA;sBAAK6E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEU,GAAG,CAACxE;oBAAI;sBAAAW,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA,GAFtCM,KAAK;oBAAA9D,QAAA,EAAAsD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGV,CAAC;gBAEV,KAAK,OAAO;kBACV,oBACEnF,OAAA;oBAAiB6E,SAAS,EAAE,kBAAkBW,GAAG,CAAC1E,MAAM,EAAG;oBAAAgE,QAAA,gBACzD9E,OAAA;sBACE0B,GAAG,EAAE8D,GAAG,CAAC9D,GAAI;sBACbgE,GAAG,EAAC,MAAM;sBACVb,SAAS,EAAC,eAAe;sBACzBQ,OAAO,EAAEA,CAAA,KAAMzB,cAAc,CAAC4B,GAAG,CAAC9D,GAAG;oBAAE;sBAAAC,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxC,CAAC,eACFnF,OAAA;sBAAK6E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEU,GAAG,CAACxE;oBAAI;sBAAAW,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA,GAPtCM,KAAK;oBAAA9D,QAAA,EAAAsD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAQV,CAAC;gBAEV,KAAK,KAAK;kBACR,oBACEnF,OAAA;oBAAiB6E,SAAS,EAAE,kBAAkBW,GAAG,CAAC1E,MAAM,EAAG;oBAAAgE,QAAA,gBAEzD9E,OAAA;sBACE6E,SAAS,EAAC,aAAa;sBACvBQ,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC0B,GAAG,CAAC9D,GAAG,EAAE8D,GAAG,CAAC7D,QAAQ,CAAE;sBAAAmD,QAAA,gBAEnD9E,OAAA,CAACR,eAAe;wBAACwF,IAAI,EAAElF,SAAU;wBAAC+E,SAAS,EAAC;sBAAU;wBAAAlD,QAAA,EAAAsD,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,eACzDnF,OAAA;wBAAM6E,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAAEU,GAAG,CAAC7D;sBAAQ;wBAAAA,QAAA,EAAAsD,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO,CAAC;oBAAA;sBAAAxD,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjD,CAAC,eACNnF,OAAA;sBAAK6E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEU,GAAG,CAACxE;oBAAI;sBAAAW,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA,GATtCM,KAAK;oBAAA9D,QAAA,EAAAsD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAUV,CAAC;gBAEV,KAAK,MAAM;kBACT,oBACEnF,OAAA;oBAAiB6E,SAAS,EAAE,kBAAkBW,GAAG,CAAC1E,MAAM,EAAG;oBAAAgE,QAAA,gBAEzD9E,OAAA;sBACE2F,IAAI,EAAEH,GAAG,CAAC9D,GAAI;sBACdkE,QAAQ,EAAEJ,GAAG,CAAC7D,QAAS;sBACvBkD,SAAS,EAAC,WAAW;sBACrBgB,KAAK,EAAC,eAAe;sBAAAf,QAAA,EAEpBU,GAAG,CAAC7D;oBAAQ;sBAAAA,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACZ,CAAC,eACJnF,OAAA;sBAAK6E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEU,GAAG,CAACxE;oBAAI;sBAAAW,QAAA,EAAAsD,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA,GAVtCM,KAAK;oBAAA9D,QAAA,EAAAsD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAWV,CAAC;gBAEV;kBACE,OAAO,IAAI;cACf;YACF,CAAC;UAAC;YAAAxD,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNnF,OAAA;YAAK6E,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B9E,OAAA;cACEiB,IAAI,EAAC,MAAM;cACX6E,WAAW,EAAC,mBAAmB;cAC/BnC,KAAK,EAAEzC,YAAa;cACpB6E,QAAQ,EAAGjD,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACE,MAAM,CAACW,KAAK,CAAE;cACjDqC,SAAS,EAAGlD,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACmD,GAAG,KAAK,OAAO,EAAE3D,UAAU,CAAC,CAAC;cACrC;YAAE;cAAAX,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEFnF,OAAA,CAACR,eAAe;cACdwF,IAAI,EAAEnF,eAAgB;cACtBgF,SAAS,EAAC,WAAW;cACrBQ,OAAO,EAAE/C;YAAW;cAAAX,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eAEFnF,OAAA;cACEiB,IAAI,EAAC,MAAM;cACXiF,MAAM,EAAC,oHAAoH;cAC3HX,GAAG,EAAEnE,YAAa;cAClB+E,KAAK,EAAE;gBAAEC,OAAO,EAAE;cAAO,CAAE;cAC3BL,QAAQ,EAAElD;YAAiB;cAAAlB,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eAEFnF,OAAA,CAACR,eAAe;cACdwF,IAAI,EAAEpF,WAAY;cAClBiF,SAAS,EAAC,aAAa;cACvBQ,OAAO,EAAE3C;YAAkB;cAAAf,QAAA,EAAAsD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAxD,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAxD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;QAAA;QAEN;QACAnF,OAAA;UAAK6E,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAe;UAAAnD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MACvD;QAAAxD,QAAA,EAAAsD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAxD,QAAA,EAAAsD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL9D,UAAU,iBACTrB,OAAA;MAAK6E,SAAS,EAAC,aAAa;MAACQ,OAAO,EAAExB,eAAgB;MAAAiB,QAAA,eACpD9E,OAAA;QAAK6E,SAAS,EAAC,qBAAqB;QAACQ,OAAO,EAAGvC,CAAC,IAAKA,CAAC,CAACuD,eAAe,CAAC,CAAE;QAAAvB,QAAA,gBAEvE9E,OAAA;UAAM6E,SAAS,EAAC,kBAAkB;UAACQ,OAAO,EAAExB,eAAgB;UAAAiB,QAAA,EAAC;QAE7D;UAAAnD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPnF,OAAA;UAAK0B,GAAG,EAAEL,UAAW;UAACqE,GAAG,EAAC,UAAU;UAACb,SAAS,EAAC;QAAa;UAAAlD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE/DnF,OAAA;UAAG2F,IAAI,EAAEtE,UAAW;UAACuE,QAAQ,EAAC,WAAW;UAACf,SAAS,EAAC,eAAe;UAAAC,QAAA,eACjE9E,OAAA,CAACR,eAAe;YAACwF,IAAI,EAAErF;UAAW;YAAAgC,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAxD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAxD,QAAA,EAAAsD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAxD,QAAA,EAAAsD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA5D,QAAQ,CAACE,IAAI,iBACZzB,OAAA;MAAK6E,SAAS,EAAC,WAAW;MAACQ,OAAO,EAAEtB,aAAc;MAAAe,QAAA,eAChD9E,OAAA;QAAK6E,SAAS,EAAC,mBAAmB;QAACQ,OAAO,EAAGvC,CAAC,IAAKA,CAAC,CAACuD,eAAe,CAAC,CAAE;QAAAvB,QAAA,gBAErE9E,OAAA;UAAM6E,SAAS,EAAC,iBAAiB;UAACQ,OAAO,EAAEtB,aAAc;UAAAe,QAAA,EAAC;QAE1D;UAAAnD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEPnF,OAAA;UACE0B,GAAG,EAAEH,QAAQ,CAACG,GAAI;UAClBT,IAAI,EAAC,iBAAiB;UACtB4D,SAAS,EAAC;QAAW;UAAAlD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eAEFnF,OAAA;UACE2F,IAAI,EAAEpE,QAAQ,CAACG,GAAI;UACnBkE,QAAQ,EAAErE,QAAQ,CAACI,QAAS;UAC5BkD,SAAS,EAAC,mBAAmB;UAC7BgB,KAAK,EAAC,cAAc;UAAAf,QAAA,eAEpB9E,OAAA,CAACR,eAAe;YAACwF,IAAI,EAAErF;UAAW;YAAAgC,QAAA,EAAAsD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAxD,QAAA,EAAAsD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAxD,QAAA,EAAAsD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAxD,QAAA,EAAAsD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAxD,QAAA,EAAAsD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9E,EAAA,CAhZID,YAAY;AAAAkG,EAAA,GAAZlG,YAAY;AAkZlB,eAAeA,YAAY;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}